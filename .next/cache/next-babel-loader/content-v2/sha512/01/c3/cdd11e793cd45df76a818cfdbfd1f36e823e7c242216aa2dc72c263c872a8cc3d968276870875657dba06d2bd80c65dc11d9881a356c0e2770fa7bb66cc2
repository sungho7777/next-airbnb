{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { createSlice } from \"@reduxjs/toolkit\";\n// * 초기상태\nconst initialState = {\n  largeBuildingType: null,\n  // * 건물 유형 큰 범주\n  buildingType: null,\n  // * 건물 유형\n  roomType: null,\n  // * 숙소 유형\n  isSetUpForGuest: null // * 게스트만을 위해 만들어진 숙소인가?\n\n};\nconst registerRoom = createSlice({\n  name: \"registerRoom\",\n  initialState,\n  reducers: {}\n}); // * 건물 유형 변경하기\n\nexport const registerRoomActions = _objectSpread({}, registerRoom.actions);\nexport default registerRoom;","map":{"version":3,"sources":["D:/SUNGHO/DEV/Next Class/next-airbnb/store/registerRoom.ts"],"names":["createSlice","initialState","largeBuildingType","buildingType","roomType","isSetUpForGuest","registerRoom","name","reducers","registerRoomActions","actions"],"mappings":";;;;;;AAAA,SAAQA,WAAR,QAA0B,kBAA1B;AAWA;AACA,MAAMC,YAA+B,GAAG;AACpCC,EAAAA,iBAAiB,EAAE,IADiB;AACJ;AAChCC,EAAAA,YAAY,EAAC,IAFuB;AAEJ;AAChCC,EAAAA,QAAQ,EAAE,IAH0B;AAGJ;AAChCC,EAAAA,eAAe,EAAC,IAJoB,CAIJ;;AAJI,CAAxC;AAOA,MAAMC,YAAY,GAAGN,WAAW,CAAC;AAC7BO,EAAAA,IAAI,EAAC,cADwB;AAE7BN,EAAAA,YAF6B;AAG7BO,EAAAA,QAAQ,EAAC;AAHoB,CAAD,CAAhC,C,CAMA;;AAIA,OAAO,MAAMC,mBAAmB,qBAAKH,YAAY,CAACI,OAAlB,CAAzB;AAEP,eAAeJ,YAAf","sourcesContent":["import {createSlice} from \"@reduxjs/toolkit\";\r\nimport { secondaryUnitBuildingTypeList } from \"../lib/staticData\";\r\n\r\n\r\ntype RegisterRoomState = {\r\n    largeBuildingType: string | null;\r\n    buildingType: string | null;\r\n    roomType: string | null;\r\n    isSetUpForGuest: boolean | null;\r\n};\r\n\r\n// * 초기상태\r\nconst initialState: RegisterRoomState = {\r\n    largeBuildingType: null,        // * 건물 유형 큰 범주\r\n    buildingType:null,              // * 건물 유형\r\n    roomType: null,                 // * 숙소 유형\r\n    isSetUpForGuest:null,           // * 게스트만을 위해 만들어진 숙소인가?\r\n};\r\n\r\nconst registerRoom = createSlice({\r\n    name:\"registerRoom\",\r\n    initialState,\r\n    reducers:{},\r\n});\r\n\r\n// * 건물 유형 변경하기\r\n\r\n\r\n\r\nexport const registerRoomActions={...registerRoom.actions};\r\n\r\nexport default registerRoom;"]},"metadata":{},"sourceType":"module"}