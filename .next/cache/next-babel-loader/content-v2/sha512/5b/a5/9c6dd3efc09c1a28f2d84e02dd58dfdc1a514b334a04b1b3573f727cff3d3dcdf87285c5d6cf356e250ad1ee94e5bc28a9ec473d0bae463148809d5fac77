{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\SUNGHO\\\\DEV\\\\Next Class\\\\next-airbnb\\\\components\\\\common\\\\CheckboxGroup.tsx\";\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport palette from \"../../styles/palette\";\nconst Container = styled.div.withConfig({\n  displayName: \"CheckboxGroup__Container\",\n  componentId: \"sc-14v8ekt-0\"\n})([\"&:after{display:block;content:\\\"\\\";clear:both;}.checkbox-label{position:relative;height:18px;margin-bottom:24px;display:flex;align-items:center;color:\", \";cursor:pointer;float:left;clear:both;}input::-ms-clear{display:none;}input[type=\\\"checkbox\\\"]{margin:0;border:0;width:0;height:0;-webkit-appearance:none;}input[type=\\\"checkbox\\\"]:checked{margin:0;border:0;-webkit-appearance:none;}input[type=\\\"checkbox\\\"] + input{display:none;}input[type=\\\"checkbox\\\"] + span{width:18px;height:18px;margin-right:8px;display:inline-block;flex-shrink:0;}input[type=\\\"checkbox\\\"] + span::before{content:\\\"\\\";width:18px;height:18px;position:absolute;top:0;display:inline-table;border:1px solid \", \";border-radius:2px;box-sizing:border-box;background-color:white;cursor:pointer;}input[type=\\\"checkbox\\\"]:checked + span::before{content:\\\" \\\";width:18px;height:18px;display:inline-table;background-color:\", \";border:0;border-radius:2px;position:absolute;background-image:url(\\\"/static/svg/checkbox/checkbox_mark.svg\\\");background-repeat:no-repeat;background-position:center;}\"], palette.gray_48, palette.gray_b0, palette.dark_cyan);\n\nconst CheckboxGroup = ({\n  value = [],\n  onChange,\n  options = []\n}) => {\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: options.map(option => /*#__PURE__*/_jsxDEV(\"label\", {\n      className: \"checkbox-label\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        checked: value === null || value === void 0 ? void 0 : value.includes(option),\n        onChange: e => {\n          if (e.target.checked) {\n            onChange([...value, option]);\n          } else {\n            onChange(value.filter(option_ => option_ !== option));\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 21\n      }, this), option]\n    }, option, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 17\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 9\n  }, this);\n};\n\nexport default CheckboxGroup;","map":{"version":3,"sources":["D:/SUNGHO/DEV/Next Class/next-airbnb/components/common/CheckboxGroup.tsx"],"names":["React","styled","palette","Container","div","gray_48","gray_b0","dark_cyan","CheckboxGroup","value","onChange","options","map","option","includes","e","target","checked","filter","option_"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,OAAP,MAAoB,sBAApB;AAEA,MAAMC,SAAS,GAAGF,MAAM,CAACG,GAAV;AAAA;AAAA;AAAA,yiCAYEF,OAAO,CAACG,OAZV,EAkDaH,OAAO,CAACI,OAlDrB,EA6DaJ,OAAO,CAACK,SA7DrB,CAAf;;AA6EA,MAAMC,aAA+B,GAAG,CAAC;AACrCC,EAAAA,KAAK,GAAG,EAD6B;AAErCC,EAAAA,QAFqC;AAGrCC,EAAAA,OAAO,GAAG;AAH2B,CAAD,KAIlC;AACF,sBACI,QAAC,SAAD;AAAA,cACKA,OAAO,CAACC,GAAR,CAAaC,MAAD,iBACT;AAAO,MAAA,SAAS,EAAC,gBAAjB;AAAA,8BACI;AACI,QAAA,IAAI,EAAC,UADT;AAEI,QAAA,OAAO,EAAEJ,KAAF,aAAEA,KAAF,uBAAEA,KAAK,CAAEK,QAAP,CAAgBD,MAAhB,CAFb;AAGI,QAAA,QAAQ,EAAGE,CAAD,IAAO;AACjB,cAAIA,CAAC,CAACC,MAAF,CAASC,OAAb,EAAsB;AAClBP,YAAAA,QAAQ,CAAC,CAAC,GAAGD,KAAJ,EAAYI,MAAZ,CAAD,CAAR;AACH,WAFD,MAEO;AACHH,YAAAA,QAAQ,CAACD,KAAK,CAACS,MAAN,CAAcC,OAAD,IAAaA,OAAO,KAAKN,MAAtC,CAAD,CAAR;AACH;AACA;AATL;AAAA;AAAA;AAAA;AAAA,cADJ,eAYI;AAAA;AAAA;AAAA;AAAA,cAZJ,EAaKA,MAbL;AAAA,OAAuCA,MAAvC;AAAA;AAAA;AAAA;AAAA,YADH;AADL;AAAA;AAAA;AAAA;AAAA,UADJ;AAqBH,CA1BD;;AA4BA,eAAeL,aAAf","sourcesContent":["import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport palette from \"../../styles/palette\";\r\n\r\nconst Container = styled.div`\r\n    &:after {\r\n        display: block;\r\n        content: \"\";\r\n        clear: both;\r\n    }\r\n    .checkbox-label {\r\n        position: relative;\r\n        height: 18px;\r\n        margin-bottom: 24px;\r\n        display: flex;\r\n        align-items: center;\r\n        color: ${palette.gray_48};\r\n        cursor: pointer;\r\n        float: left;\r\n        clear: both;\r\n    }\r\n    /** ie input x버튼 삭제 */\r\n    input::-ms-clear {\r\n        display: none;\r\n    }\r\n    input[type=\"checkbox\"] {\r\n        margin: 0;\r\n        border: 0;\r\n        width: 0;\r\n        height: 0;\r\n        -webkit-appearance: none;\r\n    }\r\n    input[type=\"checkbox\"]:checked {\r\n        margin: 0;\r\n        border: 0;\r\n        -webkit-appearance: none;\r\n    }\r\n    input[type=\"checkbox\"] + input {\r\n        display: none;\r\n    }\r\n    input[type=\"checkbox\"] + span {\r\n        width: 18px;\r\n        height: 18px;\r\n        margin-right: 8px;\r\n        display: inline-block;\r\n        flex-shrink: 0;\r\n    }\r\n    input[type=\"checkbox\"] + span::before {\r\n        content: \"\";\r\n        width: 18px;\r\n        height: 18px;\r\n        position: absolute;\r\n        top: 0;\r\n        display: inline-table;\r\n        border: 1px solid ${palette.gray_b0};\r\n        border-radius: 2px;\r\n        box-sizing: border-box;\r\n        background-color: white;\r\n        cursor: pointer;\r\n    }\r\n    input[type=\"checkbox\"]:checked + span::before {\r\n        content: \" \";\r\n        width: 18px;\r\n        height: 18px;\r\n        display: inline-table;\r\n        background-color: ${palette.dark_cyan};\r\n        border: 0;\r\n        border-radius: 2px;\r\n        position: absolute;\r\n        background-image: url(\"/static/svg/checkbox/checkbox_mark.svg\");\r\n        background-repeat: no-repeat;\r\n        background-position: center;\r\n    }\r\n`;\r\n\r\ninterface IProps {\r\n    value?: string[];\r\n    onChange: (selected: string[]) => void;\r\n    options?: string[];\r\n}\r\n\r\nconst CheckboxGroup: React.FC<IProps> = ({\r\n    value = [],\r\n    onChange,\r\n    options = [],\r\n}) => {\r\n    return (\r\n        <Container>\r\n            {options.map((option) => (\r\n                <label className=\"checkbox-label\" key={option}>\r\n                    <input\r\n                        type=\"checkbox\"\r\n                        checked={value?.includes(option)}\r\n                        onChange={(e) => {\r\n                        if (e.target.checked) {\r\n                            onChange([...value!, option]);\r\n                        } else {\r\n                            onChange(value.filter((option_) => option_ !== option));\r\n                        }\r\n                        }}\r\n                    />\r\n                    <span />\r\n                    {option}\r\n                </label>\r\n            ))}\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default CheckboxGroup;"]},"metadata":{},"sourceType":"module"}