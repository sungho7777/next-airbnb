{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\SUNGHO\\\\DEV\\\\Next Class\\\\next-airbnb\\\\hooks\\\\useModal.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useRef, useEffect, useState } from \"react\";\nimport { createPortal } from \"react-dom\";\nimport styled from \"styled-components\";\n\nvar CloseXIcon = function CloseXIcon(props) {\n  return /*#__PURE__*/_jsxDEV(\"svg\", _objectSpread(_objectSpread({}, props), {}, {\n    children: /*#__PURE__*/_jsxDEV(\"path\", {\n      fillRule: \"evenodd\",\n      clipRule: \"evenodd\",\n      d: \"m7.667 7.217 6.55-6.55.45.45-6.55 6.55 6.55 6.55-.45.45-6.55-6.55-6.55 6.55-.45-.45 6.55-6.55-6.55-6.55.45-.45 6.55 6.55z\",\n      fill: \"#000\"\n    }, void 0, false, void 0, this)\n  }), void 0, false, void 0, this);\n};\n\nCloseXIcon.defaultProps = {\n  width: \"15\",\n  height: \"15\",\n  fill: \"none\",\n  xmlns: \"http://www.w3.org/2000/svg\"\n};\nconst Container = styled.div.withConfig({\n  displayName: \"useModal__Container\",\n  componentId: \"sc-1oqnzbe-0\"\n})([\"width:100%;height:100%;display:flex;justify-content:center;align-items:center;position:fixed;top:0;left:0;z-index:10;.modal-background{position:absolute;width:100%;height:100%;background-color:rgba(0,0,0,0.75);z-index:10;}.modal-contents{width:568px;padding:32px;background-color:white;z-index:11;.modal-close-x-icon{cursor:pointer;display:block;margin:0 0 40px auto;}}\"]);\n\nconst useModal = () => {\n  const {\n    0: modalOpened,\n    1: setModalOpened\n  } = useState(false);\n\n  const openModal = () => {\n    setModalOpened(true);\n  };\n\n  const closeModal = () => {\n    setModalOpened(false);\n  };\n\n  const ModalPortal = ({\n    children\n  }) => {\n    const ref = useRef();\n    const {\n      0: mounted,\n      1: setMounted\n    } = useState(false);\n    useEffect(() => {\n      setMounted(true);\n\n      if (document) {\n        const dom = document.querySelector(\"#root-modal\");\n        ref.current = dom;\n      }\n    }, []);\n\n    if (ref.current && mounted && modalOpened) {\n      return /*#__PURE__*/createPortal( /*#__PURE__*/_jsxDEV(Container, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-background\",\n          role: \"presentation\",\n          onClick: closeModal\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-contents\",\n          children: [/*#__PURE__*/_jsxDEV(CloseXIcon, {\n            className: \"modal-close-x-icon\",\n            onClick: closeModal\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 13\n          }, this), children]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), ref.current);\n    }\n\n    return null;\n  };\n\n  return {\n    openModal,\n    closeModal,\n    ModalPortal\n  };\n};\n\nexport default useModal;","map":{"version":3,"sources":["D:/SUNGHO/DEV/Next Class/next-airbnb/hooks/useModal.tsx"],"names":["React","useRef","useEffect","useState","createPortal","styled","CloseXIcon","Container","div","useModal","modalOpened","setModalOpened","openModal","closeModal","ModalPortal","children","ref","mounted","setMounted","document","dom","querySelector","current"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,IAAeC,MAAf,EAAuBC,SAAvB,EAAkCC,QAAlC,QAAiD,OAAjD;AACA,SAAQC,YAAR,QAA2B,WAA3B;AACA,OAAOC,MAAP,MAAmB,mBAAnB;;IACOC,U,YAAAA,U;;;;;;;;;;;AAAAA,U;;;;;;AAEP,MAAMC,SAAS,GAAGF,MAAM,CAACG,GAAV;AAAA;AAAA;AAAA,yXAAf;;AAiCA,MAAMC,QAAQ,GAAG,MAAM;AACrB,QAAM;AAAA,OAACC,WAAD;AAAA,OAAcC;AAAd,MAAgCR,QAAQ,CAAC,KAAD,CAA9C;;AAEA,QAAMS,SAAS,GAAG,MAAM;AACtBD,IAAAA,cAAc,CAAC,IAAD,CAAd;AACD,GAFD;;AAIA,QAAME,UAAU,GAAG,MAAM;AACvBF,IAAAA,cAAc,CAAC,KAAD,CAAd;AACD,GAFD;;AAQA,QAAMG,WAA6B,GAAG,CAAC;AAACC,IAAAA;AAAD,GAAD,KAAgB;AACpD,UAAMC,GAAG,GAAGf,MAAM,EAAlB;AACA,UAAM;AAAA,SAACgB,OAAD;AAAA,SAAUC;AAAV,QAAwBf,QAAQ,CAAC,KAAD,CAAtC;AAEAD,IAAAA,SAAS,CAAC,MAAM;AACdgB,MAAAA,UAAU,CAAC,IAAD,CAAV;;AACA,UAAIC,QAAJ,EAAc;AACZ,cAAMC,GAAG,GAAGD,QAAQ,CAACE,aAAT,CAAuB,aAAvB,CAAZ;AACAL,QAAAA,GAAG,CAACM,OAAJ,GAAcF,GAAd;AACD;AACF,KANQ,EAMN,EANM,CAAT;;AAQA,QAAIJ,GAAG,CAACM,OAAJ,IAAeL,OAAf,IAA0BP,WAA9B,EAA2C;AACzC,0BAAON,YAAY,eACjB,QAAC,SAAD;AAAA,gCACE;AACE,UAAA,SAAS,EAAC,kBADZ;AAEE,UAAA,IAAI,EAAC,cAFP;AAGE,UAAA,OAAO,EAAES;AAHX;AAAA;AAAA;AAAA;AAAA,gBADF,eAME;AAAK,UAAA,SAAS,EAAC,gBAAf;AAAA,kCACE,QAAC,UAAD;AACE,YAAA,SAAS,EAAC,oBADZ;AAEE,YAAA,OAAO,EAAEA;AAFX;AAAA;AAAA;AAAA;AAAA,kBADF,EAKGE,QALH;AAAA;AAAA;AAAA;AAAA;AAAA,gBANF;AAAA;AAAA;AAAA;AAAA;AAAA,cADiB,EAejBC,GAAG,CAACM,OAfa,CAAnB;AAiBD;;AACD,WAAO,IAAP;AACD,GAhCD;;AAkCA,SAAO;AACLV,IAAAA,SADK;AAELC,IAAAA,UAFK;AAGLC,IAAAA;AAHK,GAAP;AAKD,CAtDD;;AAwDA,eAAeL,QAAf","sourcesContent":["import React, {useRef, useEffect, useState} from \"react\"\r\nimport {createPortal} from \"react-dom\";\r\nimport styled from \"styled-components\"\r\nimport CloseXIcon from \"../public/static/svg/modal/modal_colose_x_icon.svg\"\r\n\r\nconst Container = styled.div`\r\n  width:100%;\r\n  height:100%;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  z-index: 10;\r\n\r\n  .modal-background {\r\n    position: absolute;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: rgba(0,0,0,0.75);\r\n    z-index: 10;\r\n  }\r\n\r\n  .modal-contents {\r\n    width: 568px;\r\n    /* height: 400px; */\r\n    padding: 32px;\r\n    background-color: white;\r\n    z-index:11;\r\n    .modal-close-x-icon {\r\n      cursor:pointer;\r\n      display:block;\r\n      margin:0 0 40px auto;\r\n    }\r\n  }\r\n`;\r\n\r\nconst useModal = () => {\r\n  const [modalOpened, setModalOpened] = useState(false);\r\n\r\n  const openModal = () => {\r\n    setModalOpened(true);\r\n  };\r\n\r\n  const closeModal = () => {\r\n    setModalOpened(false);\r\n  }\r\n\r\n  interface IProps {\r\n    children: React.ReactNode;\r\n  }\r\n\r\n  const ModalPortal: React.FC<IProps> = ({children}) => {\r\n    const ref = useRef<Element | null>();\r\n    const [mounted, setMounted] = useState(false);\r\n\r\n    useEffect(() => {\r\n      setMounted(true);\r\n      if (document) {\r\n        const dom = document.querySelector(\"#root-modal\");\r\n        ref.current = dom;\r\n      }\r\n    }, []);\r\n\r\n    if (ref.current && mounted && modalOpened) {\r\n      return createPortal(\r\n        <Container>\r\n          <div \r\n            className=\"modal-background\"\r\n            role=\"presentation\"\r\n            onClick={closeModal}\r\n          />\r\n          <div className=\"modal-contents\">\r\n            <CloseXIcon\r\n              className=\"modal-close-x-icon\"\r\n              onClick={closeModal}\r\n            />\r\n            {children}\r\n          </div>\r\n        </Container>,\r\n        ref.current\r\n      );\r\n    }\r\n    return null;\r\n  };\r\n\r\n  return {\r\n    openModal,\r\n    closeModal,\r\n    ModalPortal,\r\n  };\r\n};\r\n\r\nexport default useModal;"]},"metadata":{},"sourceType":"module"}