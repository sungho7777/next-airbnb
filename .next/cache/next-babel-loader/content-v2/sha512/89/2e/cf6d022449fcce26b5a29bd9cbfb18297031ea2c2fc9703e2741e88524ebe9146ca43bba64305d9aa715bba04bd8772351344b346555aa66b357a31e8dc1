{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\SUNGHO\\\\DEV\\\\Next Class\\\\next-airbnb\\\\components\\\\common\\\\Input.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\nimport styled, { css } from \"styled-components\";\nimport palette from \"../../styles/palette\";\nimport { useSelector } from \"../../store\";\nconst Container = styled.div.withConfig({\n  displayName: \"Input__Container\",\n  componentId: \"sc-10ur99q-0\"\n})([\"input{position:relative;width:100%;height:46px;padding:\", \";border:1px solid \", \";border-radius:4px;font-size:16px;outline:none;::placeholder{color:\", \";}&:focus{border-color:\", \" !important;}}svg{position:absolute;right:11px;height:46px;}.input-error-message{margin-top:8px;font-weight:600;font-size:14px;color:\", \";}\", \" \", \"\"], ({\n  iconExist\n}) => iconExist ? \"0 44px 0 11px\" : \"0 11px\", palette.gray_eb, palette.gray_76, palette.dark_cyan, palette.tawny, ({\n  useValidation,\n  isValid\n}) => useValidation && !isValid && css([\"input{background-color:\", \";border-color:\", \";&:focus{border-color:\", \";}}\"], palette.snow, palette.orange, palette.orange), ({\n  useValidation,\n  isValid\n}) => useValidation && isValid && css([\"input{border-color:\", \";}\"], palette.dark_cyan));\n\nconst Input = (_ref) => {\n  let {\n    icon,\n    label,\n    isValid = false,\n    useValidation = true,\n    errorMessage\n  } = _ref,\n      props = _objectWithoutProperties(_ref, [\"icon\", \"label\", \"isValid\", \"useValidation\", \"errorMessage\"]);\n\n  const validateMode = useSelector(state => state.common.validateMode);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    iconExist: !!icon,\n    isValid: isValid,\n    useValidation: validateMode && useValidation,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", _objectSpread({}, props), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), icon, useValidation && validateMode && !isValid && errorMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"input-error-message\",\n      children: errorMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 5\n  }, this);\n};\n\nexport default /*#__PURE__*/React.memo(Input);","map":{"version":3,"sources":["D:/SUNGHO/DEV/Next Class/next-airbnb/components/common/Input.tsx"],"names":["React","styled","css","palette","useSelector","Container","div","iconExist","gray_eb","gray_76","dark_cyan","tawny","useValidation","isValid","snow","orange","Input","icon","label","errorMessage","props","validateMode","state","common","memo"],"mappings":";;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,IAAgBC,GAAhB,QAA0B,mBAA1B;AAEA,OAAOC,OAAP,MAAoB,sBAApB;AACA,SAAQC,WAAR,QAA0B,aAA1B;AAUA,MAAMC,SAAS,GAAGJ,MAAM,CAACK,GAAV;AAAA;AAAA;AAAA,gVAKA,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAoBA,SAAS,GAAG,eAAH,GAAqB,QALlD,EAMSJ,OAAO,CAACK,OANjB,EAWAL,OAAO,CAACM,OAXR,EAcON,OAAO,CAACO,SAdf,EA0BFP,OAAO,CAACQ,KA1BN,EA4BX,CAAC;AAAEC,EAAAA,aAAF;AAAiBC,EAAAA;AAAjB,CAAD,KACAD,aAAa,IACb,CAACC,OADD,IAEAX,GAFA,iFAIwBC,OAAO,CAACW,IAJhC,EAKoBX,OAAO,CAACY,MAL5B,EAOsBZ,OAAO,CAACY,MAP9B,CA7BW,EAwCX,CAAC;AAAEH,EAAAA,aAAF;AAAiBC,EAAAA;AAAjB,CAAD,KACAD,aAAa,IACbC,OADA,IAEAX,GAFA,gCAIoBC,OAAO,CAACO,SAJ5B,CAzCW,CAAf;;AA0DA,MAAMM,KAAuB,GAAG,UAO1B;AAAA,MAP2B;AAC/BC,IAAAA,IAD+B;AAE/BC,IAAAA,KAF+B;AAG/BL,IAAAA,OAAO,GAAG,KAHqB;AAI/BD,IAAAA,aAAa,GAAG,IAJe;AAK/BO,IAAAA;AAL+B,GAO3B;AAAA,MADDC,KACC;;AACJ,QAAMC,YAAY,GAAGjB,WAAW,CAAEkB,KAAK,IAAIA,KAAK,CAACC,MAAN,CAAaF,YAAxB,CAAhC;AAEA,sBACE,QAAC,SAAD;AACE,IAAA,SAAS,EAAE,CAAC,CAACJ,IADf;AAEE,IAAA,OAAO,EAAEJ,OAFX;AAGE,IAAA,aAAa,EAAEQ,YAAY,IAAIT,aAHjC;AAAA,4BAKE,mCAAWQ,KAAX;AAAA;AAAA;AAAA;AAAA,YALF,EAMGH,IANH,EAOGL,aAAa,IAAIS,YAAjB,IAAiC,CAACR,OAAlC,IAA6CM,YAA7C,iBACC;AAAG,MAAA,SAAS,EAAC,qBAAb;AAAA,gBAAoCA;AAApC;AAAA;AAAA;AAAA;AAAA,YARJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAaD,CAvBD;;AAyBA,4BAAenB,KAAK,CAACwB,IAAN,CAAWR,KAAX,CAAf","sourcesContent":["import React from \"react\";\r\nimport styled, {css} from \"styled-components\"\r\nimport useValidateMode from \"../../hooks/useValidateMode\";\r\nimport palette from \"../../styles/palette\"\r\nimport {useSelector} from \"../../store\";\r\n\r\n\r\ntype InputContainerProps = {\r\n  iconExist: boolean;\r\n  isValid: boolean;\r\n  useValidation: boolean;\r\n};\r\n\r\n\r\nconst Container = styled.div<InputContainerProps>`\r\n  input {\r\n    position: relative;\r\n    width: 100%;\r\n    height: 46px;\r\n    padding: ${({ iconExist }) => (iconExist ? \"0 44px 0 11px\" : \"0 11px\")};\r\n    border: 1px solid ${palette.gray_eb};\r\n    border-radius: 4px;\r\n    font-size: 16px;\r\n    outline: none;\r\n    ::placeholder {\r\n      color: ${palette.gray_76};\r\n    }\r\n    &:focus {\r\n      border-color: ${palette.dark_cyan} !important;\r\n    }\r\n  }\r\n  svg {\r\n    position: absolute;\r\n    right: 11px;\r\n    height: 46px;\r\n  }\r\n  .input-error-message {\r\n    margin-top: 8px;\r\n    font-weight: 600;\r\n    font-size: 14px;\r\n    color: ${palette.tawny};\r\n  }\r\n  ${({ useValidation, isValid }) =>\r\n    useValidation &&\r\n    !isValid &&\r\n    css`\r\n      input {\r\n        background-color: ${palette.snow};\r\n        border-color: ${palette.orange};\r\n        & :focus {\r\n          border-color: ${palette.orange};\r\n        }\r\n      }\r\n    `}\r\n  ${({ useValidation, isValid }) =>\r\n    useValidation &&\r\n    isValid &&\r\n    css`\r\n      input {\r\n        border-color: ${palette.dark_cyan};\r\n      }\r\n    `}\r\n`;\r\n\r\ninterface IProps extends React.InputHTMLAttributes<HTMLInputElement> {\r\n  icon?: JSX.Element;\r\n  label?: string;\r\n  isValid?: boolean;\r\n  useValidation?: boolean;\r\n  errorMessage?: string;\r\n}\r\n\r\nconst Input: React.FC<IProps> = ({\r\n  icon,\r\n  label,\r\n  isValid = false,\r\n  useValidation = true,\r\n  errorMessage,\r\n  ...props\r\n}) => {\r\n  const validateMode = useSelector((state => state.common.validateMode));\r\n\r\n  return (\r\n    <Container\r\n      iconExist={!!icon}\r\n      isValid={isValid}\r\n      useValidation={validateMode && useValidation}\r\n    >\r\n      <input {...props} />\r\n      {icon}\r\n      {useValidation && validateMode && !isValid && errorMessage && (\r\n        <p className=\"input-error-message\">{errorMessage}</p>\r\n      )}\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default React.memo(Input);"]},"metadata":{},"sourceType":"module"}