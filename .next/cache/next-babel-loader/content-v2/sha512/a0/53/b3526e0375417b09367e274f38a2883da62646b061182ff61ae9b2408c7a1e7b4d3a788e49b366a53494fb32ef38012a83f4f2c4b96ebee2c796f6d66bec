{"ast":null,"code":"import { readFileSync, writeFileSync } from \"fs\";\n\n// * 유저 리스트 데이터 불러오기\nconst getList = () => {\n  const userBuffer = readFileSync(\"data/users.json\");\n  const usersString = userBuffer.toString();\n\n  if (!usersString) {\n    return [];\n  }\n\n  const users = JSON.parse(usersString);\n  return users;\n}; // * email의 유저가 있는지 확인하기.\n\n\nconst exist = ({\n  email\n}) => {\n  const users = getList();\n  return users.some(user => user.email === email);\n}; // * 유저 리스트 저장하기\n\n\nconst write = async users => {\n  writeFileSync(\"data/users.json\", JSON.stringify(users));\n}; // * email 또는 id 의 유저 불러오기\n\n\nconst find = ({\n  email,\n  id\n}) => {\n  const users = getList();\n  return users.find(user => user.email === email || user.id === id);\n};\n\nexport default {\n  getList,\n  exist,\n  write,\n  find\n};","map":{"version":3,"sources":["D:/SUNGHO/DEV/Next Class/next-airbnb/lib/data/user.ts"],"names":["readFileSync","writeFileSync","getList","userBuffer","usersString","toString","users","JSON","parse","exist","email","some","user","write","stringify","find","id"],"mappings":"AAAA,SAAQA,YAAR,EAAsBC,aAAtB,QAA0C,IAA1C;;AAGA;AACA,MAAMC,OAAO,GAAC,MAAI;AACd,QAAMC,UAAU,GAAGH,YAAY,CAAC,iBAAD,CAA/B;AACA,QAAMI,WAAW,GAAGD,UAAU,CAACE,QAAX,EAApB;;AACA,MAAI,CAACD,WAAL,EAAiB;AACb,WAAO,EAAP;AACH;;AACD,QAAME,KAAuB,GAAGC,IAAI,CAACC,KAAL,CAAWJ,WAAX,CAAhC;AACA,SAAOE,KAAP;AACH,CARD,C,CAUA;;;AACA,MAAMG,KAAK,GAAC,CAAC;AAACC,EAAAA;AAAD,CAAD,KAA0B;AAClC,QAAMJ,KAAK,GAACJ,OAAO,EAAnB;AACA,SAAOI,KAAK,CAACK,IAAN,CAAYC,IAAD,IAAQA,IAAI,CAACF,KAAL,KAAaA,KAAhC,CAAP;AACH,CAHD,C,CAKA;;;AACA,MAAMG,KAAK,GAAC,MAAMP,KAAN,IAA+B;AACvCL,EAAAA,aAAa,CAAC,iBAAD,EAAoBM,IAAI,CAACO,SAAL,CAAeR,KAAf,CAApB,CAAb;AACH,CAFD,C,CAIA;;;AACA,MAAMS,IAAI,GAAG,CAAC;AAAEL,EAAAA,KAAF;AAASM,EAAAA;AAAT,CAAD,KAAoD;AAC7D,QAAMV,KAAK,GAAGJ,OAAO,EAArB;AACA,SAAOI,KAAK,CAACS,IAAN,CAAYH,IAAD,IAAUA,IAAI,CAACF,KAAL,KAAeA,KAAf,IAAwBE,IAAI,CAACI,EAAL,KAAYA,EAAzD,CAAP;AACH,CAHD;;AAMA,eAAe;AAACd,EAAAA,OAAD;AAAUO,EAAAA,KAAV;AAAiBI,EAAAA,KAAjB;AAAwBE,EAAAA;AAAxB,CAAf","sourcesContent":["import {readFileSync, writeFileSync} from \"fs\";\r\nimport {StoredUserType} from \"../../types/user\";\r\n\r\n// * 유저 리스트 데이터 불러오기\r\nconst getList=()=>{\r\n    const userBuffer = readFileSync(\"data/users.json\");\r\n    const usersString = userBuffer.toString();\r\n    if (!usersString){\r\n        return [];\r\n    }\r\n    const users: StoredUserType[] = JSON.parse(usersString);\r\n    return users;\r\n};\r\n\r\n// * email의 유저가 있는지 확인하기.\r\nconst exist=({email}:{email:string})=>{\r\n    const users=getList();\r\n    return users.some((user)=>user.email===email);\r\n};\r\n\r\n// * 유저 리스트 저장하기\r\nconst write=async(users:StoredUserType[])=>{\r\n    writeFileSync(\"data/users.json\", JSON.stringify(users));\r\n};\r\n\r\n// * email 또는 id 의 유저 불러오기\r\nconst find = ({ email, id }: { email?: string; id?: number }) => {\r\n    const users = getList();\r\n    return users.find((user) => user.email === email || user.id === id);\r\n};\r\n\r\n\r\nexport default {getList, exist, write, find};"]},"metadata":{},"sourceType":"module"}