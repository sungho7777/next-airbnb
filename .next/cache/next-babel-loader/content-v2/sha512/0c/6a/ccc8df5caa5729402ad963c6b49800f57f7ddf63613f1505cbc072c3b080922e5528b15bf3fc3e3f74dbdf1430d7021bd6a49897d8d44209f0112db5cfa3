{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _toConsumableArray from \"D:/SUNGHO/DEV/Next Class/next-airbnb/node_modules/next/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\n\nvar _jsxFileName = \"D:\\\\SUNGHO\\\\DEV\\\\Next Class\\\\next-airbnb\\\\components\\\\common\\\\CheckboxGroup.tsx\",\n    _this = this;\n\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport palette from \"../../styles/palette\";\nvar Container = styled.div.withConfig({\n  displayName: \"CheckboxGroup__Container\",\n  componentId: \"sc-14v8ekt-0\"\n})([\"&:after{display:block;content:\\\"\\\";clear:both;}.checkbox-label{position:relative;height:18px;margin-bottom:24px;display:flex;align-items:center;color:\", \";cursor:pointer;float:left;clear:both;}input::-ms-clear{display:none;}input[type=\\\"checkbox\\\"]{margin:0;border:0;width:0;height:0;-webkit-appearance:none;}input[type=\\\"checkbox\\\"]:checked{margin:0;border:0;-webkit-appearance:none;}input[type=\\\"checkbox\\\"] + input{display:none;}input[type=\\\"checkbox\\\"] + span{width:18px;height:18px;margin-right:8px;display:inline-block;flex-shrink:0;}input[type=\\\"checkbox\\\"] + span::before{content:\\\"\\\";width:18px;height:18px;position:absolute;top:0;display:inline-table;border:1px solid \", \";border-radius:2px;box-sizing:border-box;background-color:white;cursor:pointer;}input[type=\\\"checkbox\\\"]:checked + span::before{content:\\\" \\\";width:18px;height:18px;display:inline-table;background-color:\", \";border:0;border-radius:2px;position:absolute;background-image:url(\\\"/static/svg/checkbox/checkbox_mark.svg\\\");background-repeat:no-repeat;background-position:center;}\"], palette.gray_48, palette.gray_b0, palette.dark_cyan);\n_c = Container;\n\nvar CheckboxGroup = function CheckboxGroup(_ref) {\n  var _ref$value = _ref.value,\n      value = _ref$value === void 0 ? [] : _ref$value,\n      _onChange = _ref.onChange,\n      _ref$options = _ref.options,\n      options = _ref$options === void 0 ? [] : _ref$options;\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: options.map(function (option) {\n      return /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"checkbox-label\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          checked: value === null || value === void 0 ? void 0 : value.includes(option),\n          onChange: function onChange(e) {\n            if (e.target.checked) {\n              _onChange([].concat(_toConsumableArray(value), [option]));\n            } else {\n              _onChange(value.filter(function (option_) {\n                return option_ !== option;\n              }));\n            }\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 21\n        }, _this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 21\n        }, _this), option]\n      }, option, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }, _this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 9\n  }, _this);\n};\n\n_c2 = CheckboxGroup;\nexport default CheckboxGroup;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Container\");\n$RefreshReg$(_c2, \"CheckboxGroup\");","map":{"version":3,"sources":["D:/SUNGHO/DEV/Next Class/next-airbnb/components/common/CheckboxGroup.tsx"],"names":["React","styled","palette","Container","div","gray_48","gray_b0","dark_cyan","CheckboxGroup","value","onChange","options","map","option","includes","e","target","checked","filter","option_"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,OAAP,MAAoB,sBAApB;AAEA,IAAMC,SAAS,GAAGF,MAAM,CAACG,GAAV;AAAA;AAAA;AAAA,yiCAYEF,OAAO,CAACG,OAZV,EAkDaH,OAAO,CAACI,OAlDrB,EA6DaJ,OAAO,CAACK,SA7DrB,CAAf;KAAMJ,S;;AA6EN,IAAMK,aAA+B,GAAG,SAAlCA,aAAkC,OAIlC;AAAA,wBAHFC,KAGE;AAAA,MAHFA,KAGE,2BAHM,EAGN;AAAA,MAFFC,SAEE,QAFFA,QAEE;AAAA,0BADFC,OACE;AAAA,MADFA,OACE,6BADQ,EACR;AACF,sBACI,QAAC,SAAD;AAAA,cACKA,OAAO,CAACC,GAAR,CAAY,UAACC,MAAD;AAAA,0BACT;AAAO,QAAA,SAAS,EAAC,gBAAjB;AAAA,gCACI;AACI,UAAA,IAAI,EAAC,UADT;AAEI,UAAA,OAAO,EAAEJ,KAAF,aAAEA,KAAF,uBAAEA,KAAK,CAAEK,QAAP,CAAgBD,MAAhB,CAFb;AAGI,UAAA,QAAQ,EAAE,kBAACE,CAAD,EAAO;AACjB,gBAAIA,CAAC,CAACC,MAAF,CAASC,OAAb,EAAsB;AAClBP,cAAAA,SAAQ,8BAAKD,KAAL,IAAaI,MAAb,GAAR;AACH,aAFD,MAEO;AACHH,cAAAA,SAAQ,CAACD,KAAK,CAACS,MAAN,CAAa,UAACC,OAAD;AAAA,uBAAaA,OAAO,KAAKN,MAAzB;AAAA,eAAb,CAAD,CAAR;AACH;AACA;AATL;AAAA;AAAA;AAAA;AAAA,iBADJ,eAYI;AAAA;AAAA;AAAA;AAAA,iBAZJ,EAaKA,MAbL;AAAA,SAAuCA,MAAvC;AAAA;AAAA;AAAA;AAAA,eADS;AAAA,KAAZ;AADL;AAAA;AAAA;AAAA;AAAA,WADJ;AAqBH,CA1BD;;MAAML,a;AA4BN,eAAeA,aAAf","sourcesContent":["import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport palette from \"../../styles/palette\";\r\n\r\nconst Container = styled.div`\r\n    &:after {\r\n        display: block;\r\n        content: \"\";\r\n        clear: both;\r\n    }\r\n    .checkbox-label {\r\n        position: relative;\r\n        height: 18px;\r\n        margin-bottom: 24px;\r\n        display: flex;\r\n        align-items: center;\r\n        color: ${palette.gray_48};\r\n        cursor: pointer;\r\n        float: left;\r\n        clear: both;\r\n    }\r\n    /** ie input x버튼 삭제 */\r\n    input::-ms-clear {\r\n        display: none;\r\n    }\r\n    input[type=\"checkbox\"] {\r\n        margin: 0;\r\n        border: 0;\r\n        width: 0;\r\n        height: 0;\r\n        -webkit-appearance: none;\r\n    }\r\n    input[type=\"checkbox\"]:checked {\r\n        margin: 0;\r\n        border: 0;\r\n        -webkit-appearance: none;\r\n    }\r\n    input[type=\"checkbox\"] + input {\r\n        display: none;\r\n    }\r\n    input[type=\"checkbox\"] + span {\r\n        width: 18px;\r\n        height: 18px;\r\n        margin-right: 8px;\r\n        display: inline-block;\r\n        flex-shrink: 0;\r\n    }\r\n    input[type=\"checkbox\"] + span::before {\r\n        content: \"\";\r\n        width: 18px;\r\n        height: 18px;\r\n        position: absolute;\r\n        top: 0;\r\n        display: inline-table;\r\n        border: 1px solid ${palette.gray_b0};\r\n        border-radius: 2px;\r\n        box-sizing: border-box;\r\n        background-color: white;\r\n        cursor: pointer;\r\n    }\r\n    input[type=\"checkbox\"]:checked + span::before {\r\n        content: \" \";\r\n        width: 18px;\r\n        height: 18px;\r\n        display: inline-table;\r\n        background-color: ${palette.dark_cyan};\r\n        border: 0;\r\n        border-radius: 2px;\r\n        position: absolute;\r\n        background-image: url(\"/static/svg/checkbox/checkbox_mark.svg\");\r\n        background-repeat: no-repeat;\r\n        background-position: center;\r\n    }\r\n`;\r\n\r\ninterface IProps {\r\n    value?: string[];\r\n    onChange: (selected: string[]) => void;\r\n    options?: string[];\r\n}\r\n\r\nconst CheckboxGroup: React.FC<IProps> = ({\r\n    value = [],\r\n    onChange,\r\n    options = [],\r\n}) => {\r\n    return (\r\n        <Container>\r\n            {options.map((option) => (\r\n                <label className=\"checkbox-label\" key={option}>\r\n                    <input\r\n                        type=\"checkbox\"\r\n                        checked={value?.includes(option)}\r\n                        onChange={(e) => {\r\n                        if (e.target.checked) {\r\n                            onChange([...value!, option]);\r\n                        } else {\r\n                            onChange(value.filter((option_) => option_ !== option));\r\n                        }\r\n                        }}\r\n                    />\r\n                    <span />\r\n                    {option}\r\n                </label>\r\n            ))}\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default CheckboxGroup;"]},"metadata":{},"sourceType":"module"}