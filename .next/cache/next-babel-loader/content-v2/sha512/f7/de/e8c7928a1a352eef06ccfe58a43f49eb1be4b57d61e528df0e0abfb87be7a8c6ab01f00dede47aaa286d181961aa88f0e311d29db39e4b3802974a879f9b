{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n// 로그인 모달 만들기\nimport { createSlice } from \"@reduxjs/toolkit\"; // 초기 상태\n\nconst initialState = {\n  authMode: \"signup\"\n};\nconst auth = createSlice({\n  name: \"auth\",\n  initialState,\n  reducers: {\n    // 인증 팝업 변경하기\n    setAuthMode(state, action) {\n      state.authMode = action.payload;\n    }\n\n  }\n});\nexport const authActions = _objectSpread({}, auth.actions);\nexport default auth;","map":{"version":3,"sources":["D:/SUNGHO/DEV/Next Class/next-airbnb/store/auth.ts"],"names":["createSlice","initialState","authMode","auth","name","reducers","setAuthMode","state","action","payload","authActions","actions"],"mappings":";;;;;;AAAA;AACA,SAASA,WAAT,QAA2C,kBAA3C,C,CAEA;;AACA,MAAMC,YAA4C,GAAG;AACnDC,EAAAA,QAAQ,EAAE;AADyC,CAArD;AAIA,MAAMC,IAAI,GAAGH,WAAW,CAAC;AACvBI,EAAAA,IAAI,EAAE,MADiB;AAEvBH,EAAAA,YAFuB;AAGvBI,EAAAA,QAAQ,EAAE;AACR;AACAC,IAAAA,WAAW,CAACC,KAAD,EAAQC,MAAR,EAAmD;AAC5DD,MAAAA,KAAK,CAACL,QAAN,GAAiBM,MAAM,CAACC,OAAxB;AACD;;AAJO;AAHa,CAAD,CAAxB;AAWA,OAAO,MAAMC,WAAW,qBAAOP,IAAI,CAACQ,OAAZ,CAAjB;AAEP,eAAeR,IAAf","sourcesContent":["// 로그인 모달 만들기\r\nimport { createSlice, PayloadAction } from \"@reduxjs/toolkit\"\r\n\r\n// 초기 상태\r\nconst initialState: {authMode: \"signup\" | \"login\"} = {\r\n  authMode: \"signup\",\r\n};\r\n\r\nconst auth = createSlice({\r\n  name: \"auth\",\r\n  initialState,\r\n  reducers: {\r\n    // 인증 팝업 변경하기\r\n    setAuthMode(state, action: PayloadAction<\"signup\" | \"login\">) {\r\n      state.authMode = action.payload;\r\n    },\r\n  },\r\n});\r\n\r\nexport const authActions = {...auth.actions};\r\n\r\nexport default auth;"]},"metadata":{},"sourceType":"module"}