{"ast":null,"code":"import _defineProperty from \"D:/SUNGHO/DEV/Next Class/next-airbnb/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _objectWithoutProperties from \"D:/SUNGHO/DEV/Next Class/next-airbnb/node_modules/next/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\n\nvar _jsxFileName = \"D:\\\\SUNGHO\\\\DEV\\\\Next Class\\\\next-airbnb\\\\components\\\\common\\\\Button.tsx\",\n    _this = this;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from \"react\";\nimport styled, { css } from \"styled-components\";\nimport palette from \"../../styles/palette\"; // * 버튼 색상 구하기\n\nvar getButtonColor = function getButtonColor(color, colorReverse) {\n  if (colorReverse) {\n    switch (color) {\n      case \"dark_cyan\":\n        return css([\"border:2px solid \", \";color:\", \";background-color:white;\"], palette.dark_cyan, palette.dark_cyan);\n\n      default:\n        return css([\"border:2px solid \", \";color:\", \";background-color:white;\"], palette.black, palette.black);\n    }\n  }\n\n  switch (color) {\n    case \"dark_cyan\":\n      return css([\"background-color:\", \";\"], palette.dark_cyan);\n\n    case \"white\":\n      return css([\"background-color:white;\"]);\n\n    default:\n      return css([\"background-color:\", \";\"], palette.bittersweet);\n  }\n}; // * 버튼 크기 구하기\n\n\nvar getButtonSize = function getButtonSize(size) {\n  switch (size) {\n    case \"small\":\n      return css([\"font-size:14px;height:36px;\"]);\n\n    case \"medium\":\n      return css([\"height:48px;\"]);\n\n    default:\n      return \"\";\n  }\n};\n\nvar Container = styled.button.withConfig({\n  displayName: \"Button__Container\",\n  componentId: \"sc-1h0fxq-0\"\n})([\"display:flex;justify-content:center;align-items:center;width:100%;height:48px;padding:0 15px;border:0;border-radius:4px;font-size:18px;font-weight:700;outline:none;cursor:pointer;width:\", \";\", \";\", \";svg{margin-right:12px;}\"], function (props) {\n  return props.width;\n}, function (props) {\n  return getButtonColor(props.color || \"\", props.colorReverse);\n}, function (props) {\n  return getButtonSize(props.size);\n});\n_c = Container;\nvar normalButtonStyle = css([\"width:100%;height:48px;border:0;border-radius:4px;background-color:\", \";color:white;font-size:16px;font-weight:800;outline:none;cursor:pointer;\"], palette.bittersweet);\nvar RegisterButtonStyle = css([\"width:161px;height:45px;border:1px solid \", \";background-color:white;border-radius:4px;color:\", \";font-size:18px;font-weight:700;outline:none;cursor:pointer;\"], palette.gray_c4, palette.gray_48);\n\nvar Button = function Button(_ref) {\n  var children = _ref.children,\n      color = _ref.color,\n      width = _ref.width,\n      _ref$colorReverse = _ref.colorReverse,\n      colorReverse = _ref$colorReverse === void 0 ? false : _ref$colorReverse,\n      icon = _ref.icon,\n      _ref$size = _ref.size,\n      size = _ref$size === void 0 ? \"medium\" : _ref$size,\n      props = _objectWithoutProperties(_ref, [\"children\", \"color\", \"width\", \"colorReverse\", \"icon\", \"size\"]);\n\n  return /*#__PURE__*/_jsxDEV(Container, _objectSpread(_objectSpread({}, props), {}, {\n    color: color,\n    width: width,\n    colorReverse: colorReverse,\n    size: size,\n    children: [icon, children]\n  }), void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 129,\n    columnNumber: 5\n  }, _this);\n};\n\n_c2 = Button;\nexport default _c3 = /*#__PURE__*/React.memo(Button);\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Container\");\n$RefreshReg$(_c2, \"Button\");\n$RefreshReg$(_c3, \"%default%\");","map":{"version":3,"sources":["D:/SUNGHO/DEV/Next Class/next-airbnb/components/common/Button.tsx"],"names":["React","styled","css","palette","getButtonColor","color","colorReverse","dark_cyan","black","bittersweet","getButtonSize","size","Container","button","props","width","normalButtonStyle","RegisterButtonStyle","gray_c4","gray_48","Button","children","icon","memo"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,IAAgBC,GAAhB,QAA0B,mBAA1B;AACA,OAAOC,OAAP,MAAoB,sBAApB,C,CAEA;;AACA,IAAMC,cAAc,GAAC,SAAfA,cAAe,CAACC,KAAD,EAAeC,YAAf,EAAsC;AACzD,MAAIA,YAAJ,EAAkB;AAChB,YAAQD,KAAR;AACI,WAAK,WAAL;AACE,eAAOH,GAAP,+DACsBC,OAAO,CAACI,SAD9B,EAEWJ,OAAO,CAACI,SAFnB;;AAKF;AACI,eAAOL,GAAP,+DACoBC,OAAO,CAACK,KAD5B,EAESL,OAAO,CAACK,KAFjB;AARR;AAcD;;AACD,UAAQH,KAAR;AACE,SAAK,WAAL;AACE,aAAOH,GAAP,6BACsBC,OAAO,CAACI,SAD9B;;AAGF,SAAK,OAAL;AACA,aAAOL,GAAP;;AAGA;AACI,aAAOA,GAAP,6BACoBC,OAAO,CAACM,WAD5B;AAVN;AAcD,CA/BD,C,CAiCA;;;AACA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAACC,IAAD,EAA2B;AAC/C,UAAQA,IAAR;AACE,SAAK,OAAL;AACE,aAAOT,GAAP;;AAIF,SAAK,QAAL;AACE,aAAOA,GAAP;;AAGF;AACI,aAAO,EAAP;AAXN;AAaD,CAdD;;AAsBA,IAAMU,SAAS,GAAGX,MAAM,CAACY,MAAV;AAAA;AAAA;AAAA,wOAaJ,UAACC,KAAD;AAAA,SAAWA,KAAK,CAACC,KAAjB;AAAA,CAbI,EAcX,UAACD,KAAD;AAAA,SAAWV,cAAc,CAACU,KAAK,CAACT,KAAN,IAAe,EAAhB,EAAoBS,KAAK,CAACR,YAA1B,CAAzB;AAAA,CAdW,EAeX,UAACQ,KAAD;AAAA,SAAWJ,aAAa,CAACI,KAAK,CAACH,IAAP,CAAxB;AAAA,CAfW,CAAf;KAAMC,S;AAqBN,IAAMI,iBAAiB,GAAGd,GAAH,sJAKDC,OAAO,CAACM,WALP,CAAvB;AAaA,IAAMQ,mBAAmB,GAAGf,GAAH,oKAGHC,OAAO,CAACe,OAHL,EAMdf,OAAO,CAACgB,OANM,CAAzB;;AAuBA,IAAMC,MAAwB,GAAG,SAA3BA,MAA2B,OAQ3B;AAAA,MAPJC,QAOI,QAPJA,QAOI;AAAA,MANJhB,KAMI,QANJA,KAMI;AAAA,MALJU,KAKI,QALJA,KAKI;AAAA,+BAJJT,YAII;AAAA,MAJJA,YAII,kCAJW,KAIX;AAAA,MAHJgB,IAGI,QAHJA,IAGI;AAAA,uBAFJX,IAEI;AAAA,MAFJA,IAEI,0BAFG,QAEH;AAAA,MADDG,KACC;;AACJ,sBACE,QAAC,SAAD,kCAAeA,KAAf;AAAsB,IAAA,KAAK,EAAET,KAA7B;AAAoC,IAAA,KAAK,EAAEU,KAA3C;AAAkD,IAAA,YAAY,EAAET,YAAhE;AAA8E,IAAA,IAAI,EAAIK,IAAtF;AAAA,eACGW,IADH,EAEGD,QAFH;AAAA;AAAA;AAAA;AAAA;AAAA,WADF;AAOD,CAhBD;;MAAMD,M;AAkBN,kCAAepB,KAAK,CAACuB,IAAN,CAAWH,MAAX,CAAf","sourcesContent":["import React from \"react\"\r\nimport styled, {css} from \"styled-components\"\r\nimport palette from \"../../styles/palette\"\r\n\r\n// * 버튼 색상 구하기\r\nconst getButtonColor=(color:string, colorReverse:boolean)=>{\r\n  if (colorReverse) {\r\n    switch (color) {\r\n        case \"dark_cyan\":\r\n          return css`\r\n            border: 2px solid ${palette.dark_cyan};\r\n            color: ${palette.dark_cyan};\r\n            background-color: white;\r\n          `;\r\n        default:\r\n            return css`\r\n            border: 2px solid ${palette.black};\r\n            color: ${palette.black};\r\n            background-color: white;\r\n        `;\r\n    }\r\n  }\r\n  switch (color) {\r\n    case \"dark_cyan\":\r\n      return css`\r\n        background-color: ${palette.dark_cyan};\r\n      `;\r\n    case \"white\":\r\n    return css`\r\n        background-color: white;\r\n    `;\r\n    default:\r\n        return css`\r\n        background-color: ${palette.bittersweet};\r\n    `;\r\n  }\r\n};\r\n\r\n// * 버튼 크기 구하기\r\nconst getButtonSize = (size:\"small\" | \"medium\")=>{\r\n  switch (size) {\r\n    case \"small\":\r\n      return css`\r\n        font-size: 14px;\r\n        height: 36px;\r\n      `;\r\n    case \"medium\":\r\n      return css`\r\n        height: 48px;\r\n      `;\r\n    default:\r\n        return \"\";\r\n  }\r\n};\r\n\r\ninterface SytledButtonprops {\r\n  width: string | undefined;\r\n  colorReverse: boolean;\r\n  size: \"small\" | \"medium\"\r\n}\r\n\r\nconst Container = styled.button<SytledButtonprops>`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  width: 100%;\r\n  height: 48px;\r\n  padding: 0 15px;\r\n  border: 0;\r\n  border-radius: 4px;\r\n  font-size: 18px;\r\n  font-weight: 700;\r\n  outline: none;\r\n  cursor: pointer;\r\n  width: ${(props) => props.width};\r\n  ${(props) => getButtonColor(props.color || \"\", props.colorReverse)};\r\n  ${(props) => getButtonSize(props.size)};\r\n  svg {\r\n      margin-right: 12px;\r\n  }\r\n`;\r\n\r\nconst normalButtonStyle = css`\r\n  width: 100%;\r\n  height: 48px;\r\n  border: 0;\r\n  border-radius: 4px;\r\n  background-color: ${palette.bittersweet};\r\n  color: white;\r\n  font-size: 16px;\r\n  font-weight: 800;\r\n  outline: none;\r\n  cursor: pointer;\r\n`;\r\n\r\nconst RegisterButtonStyle = css`\r\n  width: 161px;\r\n  height: 45px;\r\n  border: 1px solid ${palette.gray_c4};\r\n  background-color: white;\r\n  border-radius: 4px;\r\n  color: ${palette.gray_48};\r\n  font-size: 18px;\r\n  font-weight: 700;\r\n  outline: none;\r\n  cursor: pointer;\r\n`;\r\n\r\n\r\ninterface IProps extends React.ButtonHTMLAttributes<HTMLButtonElement> {\r\n  children: React.ReactNode;\r\n  color?: \"dark_cyan\" | \"white\" | \"bittersweet\" | \"amaranth\";\r\n  width?: string;\r\n  colorReverse?: boolean;\r\n  icon?: JSX.Element;\r\n  size?: \"small\" | \"medium\"\r\n}\r\n\r\nconst Button: React.FC<IProps> = ({\r\n  children,\r\n  color,\r\n  width,\r\n  colorReverse = false,\r\n  icon,\r\n  size = \"medium\",\r\n  ...props\r\n}) => {\r\n  return (\r\n    <Container {...props} color={color} width={width} colorReverse={colorReverse} size = {size}>\r\n      {icon}\r\n      {children}\r\n      \r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default React.memo(Button);"]},"metadata":{},"sourceType":"module"}