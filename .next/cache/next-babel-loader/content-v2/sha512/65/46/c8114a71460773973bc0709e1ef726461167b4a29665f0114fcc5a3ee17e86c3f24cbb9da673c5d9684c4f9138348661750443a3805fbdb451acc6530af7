{"ast":null,"code":"import _defineProperty from \"D:/SUNGHO/DEV/Next Class/next-airbnb/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { createSlice } from \"@reduxjs/toolkit\"; // * 초기상태\n\nvar initialState = {\n  authMode: \"signup\"\n};\nvar auth = createSlice({\n  name: \"auth\",\n  initialState: initialState,\n  reducers: {\n    // * 인증 팝업 변경하기\n    setAuthMode: function setAuthMode(state, action) {\n      state.authMode = action.payload;\n    }\n  }\n});\nexport var authActions = _objectSpread({}, auth.actions);\nexport default auth;","map":{"version":3,"sources":["D:/SUNGHO/DEV/Next Class/next-airbnb/store/auth.ts"],"names":["createSlice","initialState","authMode","auth","name","reducers","setAuthMode","state","action","payload","authActions","actions"],"mappings":";;;;;;AAAA,SAAQA,WAAR,QAAyC,kBAAzC,C,CAEA;;AACA,IAAMC,YAA0C,GAAC;AAC7CC,EAAAA,QAAQ,EAAC;AADoC,CAAjD;AAIA,IAAMC,IAAI,GAACH,WAAW,CAAC;AACnBI,EAAAA,IAAI,EAAC,MADc;AAEnBH,EAAAA,YAAY,EAAZA,YAFmB;AAGnBI,EAAAA,QAAQ,EAAC;AACL;AACAC,IAAAA,WAFK,uBAEOC,KAFP,EAEcC,MAFd,EAEuD;AACxDD,MAAAA,KAAK,CAACL,QAAN,GAAeM,MAAM,CAACC,OAAtB;AACH;AAJI;AAHU,CAAD,CAAtB;AAWA,OAAO,IAAMC,WAAW,qBAAOP,IAAI,CAACQ,OAAZ,CAAjB;AAEP,eAAeR,IAAf","sourcesContent":["import {createSlice, PayloadAction} from \"@reduxjs/toolkit\";\r\n\r\n// * 초기상태\r\nconst initialState:{authMode:\"signup\" | \"login\"}={\r\n    authMode:\"signup\",\r\n};\r\n\r\nconst auth=createSlice({\r\n    name:\"auth\",\r\n    initialState,\r\n    reducers:{\r\n        // * 인증 팝업 변경하기\r\n        setAuthMode(state, action:PayloadAction<\"signup\" | \"login\">){\r\n            state.authMode=action.payload;\r\n        },\r\n    },\r\n});\r\n\r\nexport const authActions = {...auth.actions};\r\n\r\nexport default auth;"]},"metadata":{},"sourceType":"module"}