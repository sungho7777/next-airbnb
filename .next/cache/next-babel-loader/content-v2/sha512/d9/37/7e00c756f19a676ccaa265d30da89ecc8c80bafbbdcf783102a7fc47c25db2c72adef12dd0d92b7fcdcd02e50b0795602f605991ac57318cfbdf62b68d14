{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\SUNGHO\\\\DEV\\\\Next Class\\\\next-airbnb\\\\components\\\\common\\\\Textarea.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\nimport ReactAutosizeTextarea from \"react-autosize-textarea\";\nimport styled, { css } from \"styled-components\";\nimport { useSelector } from \"../../store\";\nimport palette from \"../../styles/palette\";\nconst Container = styled.div.withConfig({\n  displayName: \"Textarea__Container\",\n  componentId: \"wjq6i1-0\"\n})([\"label{display:block;margin-bottom:8px;}textarea{position:relative;width:100%;min-height:216px;padding:11px;border:1px solid \", \";border-radius:4px;font-size:16px;outline:none;resize:none;font:inherit;&::placeholder{color:\", \";}&:focus{border-color:\", \";}}svg{position:absolute;right:11px;height:46px;}.input-error-message{margin-top:8px;font-weight:600;font-size:14px;color:\", \";}\", \" \", \"\"], palette.gray_eb, palette.gray_76, palette.dark_cyan, palette.tawny, ({\n  useValidation,\n  isValid\n}) => useValidation && !isValid && css([\"textarea{background-color:\", \";border-color:\", \";&:focus{border-color:\", \";}}\"], palette.snow, palette.orange, palette.orange), ({\n  useValidation,\n  isValid\n}) => useValidation && isValid && css([\"textarea{border-color:\", \";}\"], palette.dark_cyan));\n\nconst Textarea = (_ref) => {\n  let {\n    label,\n    isValid = false,\n    useValidation = true,\n    errorMessage\n  } = _ref,\n      props = _objectWithoutProperties(_ref, [\"label\", \"isValid\", \"useValidation\", \"errorMessage\"]);\n\n  const validateMode = useSelector(state => state.common.validateMode);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    isValid: isValid,\n    useValidation: useValidation && validateMode,\n    children: [label && /*#__PURE__*/_jsxDEV(\"label\", {\n      children: label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 23\n    }, this), /*#__PURE__*/_jsxDEV(ReactAutosizeTextarea, _objectSpread({}, props), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }, this), useValidation && validateMode && !isValid && errorMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"input-error-message\",\n      children: errorMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 9\n  }, this);\n};\n\nexport default /*#__PURE__*/React.memo(Textarea);","map":{"version":3,"sources":["D:/SUNGHO/DEV/Next Class/next-airbnb/components/common/Textarea.tsx"],"names":["React","ReactAutosizeTextarea","styled","css","useSelector","palette","Container","div","gray_eb","gray_76","dark_cyan","tawny","useValidation","isValid","snow","orange","Textarea","label","errorMessage","props","validateMode","state","common","memo"],"mappings":";;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,qBAAP,MAAkC,yBAAlC;AACA,OAAOC,MAAP,IAAiBC,GAAjB,QAA4B,mBAA5B;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,OAAOC,OAAP,MAAoB,sBAApB;AAOA,MAAMC,SAAS,GAAGJ,MAAM,CAACK,GAAV;AAAA;AAAA;AAAA,8YAUaF,OAAO,CAACG,OAVrB,EAiBEH,OAAO,CAACI,OAjBV,EAoBSJ,OAAO,CAACK,SApBjB,EAgCEL,OAAO,CAACM,KAhCV,EAkCT,CAAC;AAAEC,EAAAA,aAAF;AAAiBC,EAAAA;AAAjB,CAAD,KACED,aAAa,IACb,CAACC,OADD,IAEAV,GAFA,oFAI4BE,OAAO,CAACS,IAJpC,EAKwBT,OAAO,CAACU,MALhC,EAOwBV,OAAO,CAACU,MAPhC,CAnCO,EA8CT,CAAC;AAAEH,EAAAA,aAAF;AAAiBC,EAAAA;AAAjB,CAAD,KACED,aAAa,IACbC,OADA,IAEAV,GAFA,mCAIwBE,OAAO,CAACK,SAJhC,CA/CO,CAAf;;AA+DA,MAAMM,QAA0B,GAAG,UAM7B;AAAA,MAN8B;AAChCC,IAAAA,KADgC;AAEhCJ,IAAAA,OAAO,GAAG,KAFsB;AAGhCD,IAAAA,aAAa,GAAG,IAHgB;AAIhCM,IAAAA;AAJgC,GAM9B;AAAA,MADCC,KACD;;AACF,QAAMC,YAAY,GAAGhB,WAAW,CAAEiB,KAAD,IAAWA,KAAK,CAACC,MAAN,CAAaF,YAAzB,CAAhC;AAEA,sBACI,QAAC,SAAD;AAAW,IAAA,OAAO,EAAEP,OAApB;AAA6B,IAAA,aAAa,EAAED,aAAa,IAAIQ,YAA7D;AAAA,eACKH,KAAK,iBAAI;AAAA,gBAAQA;AAAR;AAAA;AAAA;AAAA;AAAA,YADd,eAEI,QAAC,qBAAD,oBAA2BE,KAA3B;AAAA;AAAA;AAAA;AAAA,YAFJ,EAGKP,aAAa,IAAIQ,YAAjB,IAAiC,CAACP,OAAlC,IAA6CK,YAA7C,iBACG;AAAG,MAAA,SAAS,EAAC,qBAAb;AAAA,gBAAoCA;AAApC;AAAA;AAAA;AAAA;AAAA,YAJR;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AASH,CAlBD;;AAoBA,4BAAelB,KAAK,CAACuB,IAAN,CAAWP,QAAX,CAAf","sourcesContent":["import React from \"react\";\r\nimport ReactAutosizeTextarea from \"react-autosize-textarea\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { useSelector } from \"../../store\";\r\nimport palette from \"../../styles/palette\";\r\n\r\ntype InputContainerProps = {\r\n    isValid: boolean;\r\n    useValidation: boolean;\r\n};\r\n\r\nconst Container = styled.div<InputContainerProps>`\r\n    label {\r\n        display: block;\r\n        margin-bottom: 8px;\r\n    }\r\n    textarea {\r\n        position: relative;\r\n        width: 100%;\r\n        min-height: 216px;\r\n        padding: 11px;\r\n        border: 1px solid ${palette.gray_eb};\r\n        border-radius: 4px;\r\n        font-size: 16px;\r\n        outline: none;\r\n        resize: none;\r\n        font: inherit;\r\n        & ::placeholder {\r\n        color: ${palette.gray_76};\r\n        }\r\n        & :focus {\r\n        border-color: ${palette.dark_cyan};\r\n        }\r\n    }\r\n    svg {\r\n        position: absolute;\r\n        right: 11px;\r\n        height: 46px;\r\n    }\r\n    .input-error-message {\r\n        margin-top: 8px;\r\n        font-weight: 600;\r\n        font-size: 14px;\r\n        color: ${palette.tawny};\r\n    }\r\n    ${({ useValidation, isValid }) =>\r\n        useValidation &&\r\n        !isValid &&\r\n        css`\r\n            textarea {\r\n                background-color: ${palette.snow};\r\n                border-color: ${palette.orange};\r\n                & :focus {\r\n                border-color: ${palette.orange};\r\n                }\r\n            }\r\n        `}\r\n    ${({ useValidation, isValid }) =>\r\n        useValidation &&\r\n        isValid &&\r\n        css`\r\n            textarea {\r\n                border-color: ${palette.dark_cyan};\r\n            }\r\n        `}\r\n`;\r\n\r\ninterface IProps extends React.InputHTMLAttributes<HTMLTextAreaElement> {\r\n    label?: string;\r\n    isValid?: boolean;\r\n    useValidation?: boolean;\r\n    errorMessage?: string;\r\n}\r\n\r\nconst Textarea: React.FC<IProps> = ({\r\n    label,\r\n    isValid = false,\r\n    useValidation = true,\r\n    errorMessage,\r\n    ...props\r\n}) => {\r\n    const validateMode = useSelector((state) => state.common.validateMode);\r\n\r\n    return (\r\n        <Container isValid={isValid} useValidation={useValidation && validateMode}>\r\n            {label && <label>{label}</label>}\r\n            <ReactAutosizeTextarea {...props} />\r\n            {useValidation && validateMode && !isValid && errorMessage && (\r\n                <p className=\"input-error-message\">{errorMessage}</p>\r\n            )}\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default React.memo(Textarea);"]},"metadata":{},"sourceType":"module"}