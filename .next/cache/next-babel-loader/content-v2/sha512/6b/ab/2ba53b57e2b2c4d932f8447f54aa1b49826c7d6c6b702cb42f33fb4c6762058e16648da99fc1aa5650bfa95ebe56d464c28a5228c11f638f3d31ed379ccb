{"ast":null,"code":"import _defineProperty from \"D:/SUNGHO/DEV/Next Class/next-airbnb/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _objectWithoutProperties from \"D:/SUNGHO/DEV/Next Class/next-airbnb/node_modules/next/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\n\nvar _jsxFileName = \"D:\\\\SUNGHO\\\\DEV\\\\Next Class\\\\next-airbnb\\\\components\\\\common\\\\Button.tsx\",\n    _this = this;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from \"react\";\nimport styled, { css } from \"styled-components\";\nimport palette from \"../../styles/palette\"; // * 버튼 색상 구하기\n\nvar getButtonColor = function getButtonColor(color, colorReverse) {\n  if (colorReverse) {\n    switch (color) {\n      case \"dark_cyan\":\n        return css([\"border:2px solid \", \";color:\", \";background-color:white;\"], palette.dark_cyan, palette.dark_cyan);\n\n      default:\n        return css([\"border:2px solid \", \";color:\", \";background-color:white;\"], palette.black, palette.black);\n    }\n  }\n\n  switch (color) {\n    case \"dark_cyan\":\n      return css([\"background-color:\", \";\"], palette.dark_cyan);\n\n    case \"white\":\n      return css([\"background-color:white;\"]);\n\n    default:\n      return css([\"background-color:\", \";\"], palette.bittersweet);\n  }\n};\n\nvar normalButtonStyle = css([\"width:100%;height:48px;border:0;border-radius:4px;background-color:\", \";color:white;font-size:16px;font-weight:800;outline:none;cursor:pointer;\"], palette.bittersweet);\nvar RegisterButtonStyle = css([\"width:161px;height:45px;border:1px solid \", \";background-color:white;border-radius:4px;color:\", \";font-size:18px;font-weight:700;outline:none;cursor:pointer;\"], palette.gray_c4, palette.gray_48);\n/*\r\n  const Container = styled.button`\r\n    width:100%;\r\n    height: 48px;\r\n    border: 0;\r\n    border-radius: 4px;\r\n    background-color: ${palette.bittersweet};\r\n    color: white;\r\n    font-size: 16px;\r\n    font-weight: 800;\r\n    outline:none;\r\n    cursor: pointer;\r\n    ${(props)=>getButtonColor(props.color || \"\")}\r\n  `;\r\n*/\n\nvar Container = styled.button.withConfig({\n  displayName: \"Button__Container\",\n  componentId: \"sc-1h0fxq-0\"\n})([\"\", \" \", \"\"], function (_ref) {\n  var styleType = _ref.styleType;\n  return styleType === \"register\" ? RegisterButtonStyle : normalButtonStyle;\n}, function (props) {\n  return getButtonColor(props.color || \"\");\n});\n_c = Container;\n\nvar Button = function Button(_ref2) {\n  var children = _ref2.children,\n      color = _ref2.color,\n      _ref2$styleType = _ref2.styleType,\n      styleType = _ref2$styleType === void 0 ? \"normal\" : _ref2$styleType,\n      props = _objectWithoutProperties(_ref2, [\"children\", \"color\", \"styleType\"]);\n\n  return /*#__PURE__*/_jsxDEV(Container, _objectSpread(_objectSpread({}, props), {}, {\n    color: color,\n    styleType: styleType,\n    children: children\n  }), void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 98,\n    columnNumber: 5\n  }, _this);\n};\n\n_c2 = Button;\nexport default _c3 = /*#__PURE__*/React.memo(Button);\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Container\");\n$RefreshReg$(_c2, \"Button\");\n$RefreshReg$(_c3, \"%default%\");","map":{"version":3,"sources":["D:/SUNGHO/DEV/Next Class/next-airbnb/components/common/Button.tsx"],"names":["React","styled","css","palette","getButtonColor","color","colorReverse","dark_cyan","black","bittersweet","normalButtonStyle","RegisterButtonStyle","gray_c4","gray_48","Container","button","styleType","props","Button","children","memo"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,IAAgBC,GAAhB,QAA0B,mBAA1B;AACA,OAAOC,OAAP,MAAoB,sBAApB,C,CAEA;;AACA,IAAMC,cAAc,GAAC,SAAfA,cAAe,CAACC,KAAD,EAAeC,YAAf,EAAsC;AACzD,MAAIA,YAAJ,EAAkB;AAChB,YAAQD,KAAR;AACI,WAAK,WAAL;AACE,eAAOH,GAAP,+DACsBC,OAAO,CAACI,SAD9B,EAEWJ,OAAO,CAACI,SAFnB;;AAKF;AACI,eAAOL,GAAP,+DACoBC,OAAO,CAACK,KAD5B,EAESL,OAAO,CAACK,KAFjB;AARR;AAcD;;AACD,UAAQH,KAAR;AACE,SAAK,WAAL;AACE,aAAOH,GAAP,6BACsBC,OAAO,CAACI,SAD9B;;AAGF,SAAK,OAAL;AACA,aAAOL,GAAP;;AAGA;AACI,aAAOA,GAAP,6BACoBC,OAAO,CAACM,WAD5B;AAVN;AAcD,CA/BD;;AAgCA,IAAMC,iBAAiB,GAAGR,GAAH,sJAKDC,OAAO,CAACM,WALP,CAAvB;AAaA,IAAME,mBAAmB,GAAGT,GAAH,oKAGHC,OAAO,CAACS,OAHL,EAMdT,OAAO,CAACU,OANM,CAAzB;AAYA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,IAAMC,SAAS,GAAGb,MAAM,CAACc,MAAV;AAAA;AAAA;AAAA,kBACT;AAAA,MAAGC,SAAH,QAAGA,SAAH;AAAA,SACEA,SAAS,KAAK,UAAd,GAA2BL,mBAA3B,GAAiDD,iBADnD;AAAA,CADS,EAGT,UAACO,KAAD;AAAA,SAAWb,cAAc,CAACa,KAAK,CAACZ,KAAN,IAAe,EAAhB,CAAzB;AAAA,CAHS,CAAf;KAAMS,S;;AAYN,IAAMI,MAAwB,GAAG,SAA3BA,MAA2B,QAK3B;AAAA,MAJJC,QAII,SAJJA,QAII;AAAA,MAHJd,KAGI,SAHJA,KAGI;AAAA,8BAFJW,SAEI;AAAA,MAFJA,SAEI,gCAFM,QAEN;AAAA,MADDC,KACC;;AACJ,sBACE,QAAC,SAAD,kCAAeA,KAAf;AAAsB,IAAA,KAAK,EAAEZ,KAA7B;AAAoC,IAAA,SAAS,EAAEW,SAA/C;AAAA,cACGG;AADH;AAAA;AAAA;AAAA;AAAA,WADF;AAKD,CAXD;;MAAMD,M;AAaN,kCAAelB,KAAK,CAACoB,IAAN,CAAWF,MAAX,CAAf","sourcesContent":["import React from \"react\"\r\nimport styled, {css} from \"styled-components\"\r\nimport palette from \"../../styles/palette\"\r\n\r\n// * 버튼 색상 구하기\r\nconst getButtonColor=(color:string, colorReverse:boolean)=>{\r\n  if (colorReverse) {\r\n    switch (color) {\r\n        case \"dark_cyan\":\r\n          return css`\r\n            border: 2px solid ${palette.dark_cyan};\r\n            color: ${palette.dark_cyan};\r\n            background-color: white;\r\n          `;\r\n        default:\r\n            return css`\r\n            border: 2px solid ${palette.black};\r\n            color: ${palette.black};\r\n            background-color: white;\r\n        `;\r\n    }\r\n  }\r\n  switch (color) {\r\n    case \"dark_cyan\":\r\n      return css`\r\n        background-color: ${palette.dark_cyan};\r\n      `;\r\n    case \"white\":\r\n    return css`\r\n        background-color: white;\r\n    `;\r\n    default:\r\n        return css`\r\n        background-color: ${palette.bittersweet};\r\n    `;\r\n  }\r\n};\r\nconst normalButtonStyle = css`\r\n  width: 100%;\r\n  height: 48px;\r\n  border: 0;\r\n  border-radius: 4px;\r\n  background-color: ${palette.bittersweet};\r\n  color: white;\r\n  font-size: 16px;\r\n  font-weight: 800;\r\n  outline: none;\r\n  cursor: pointer;\r\n`;\r\n\r\nconst RegisterButtonStyle = css`\r\n  width: 161px;\r\n  height: 45px;\r\n  border: 1px solid ${palette.gray_c4};\r\n  background-color: white;\r\n  border-radius: 4px;\r\n  color: ${palette.gray_48};\r\n  font-size: 18px;\r\n  font-weight: 700;\r\n  outline: none;\r\n  cursor: pointer;\r\n`;\r\n/*\r\n  const Container = styled.button`\r\n    width:100%;\r\n    height: 48px;\r\n    border: 0;\r\n    border-radius: 4px;\r\n    background-color: ${palette.bittersweet};\r\n    color: white;\r\n    font-size: 16px;\r\n    font-weight: 800;\r\n    outline:none;\r\n    cursor: pointer;\r\n    ${(props)=>getButtonColor(props.color || \"\")}\r\n  `;\r\n*/\r\n\r\nconst Container = styled.button<{ styleType: \"normal\" | \"register\" }>`\r\n    ${({ styleType }) =>\r\n        styleType === \"register\" ? RegisterButtonStyle : normalButtonStyle}\r\n    ${(props) => getButtonColor(props.color || \"\")}\r\n`;\r\n\r\ninterface IProps extends React.ButtonHTMLAttributes<HTMLButtonElement> {\r\n  children: React.ReactNode;\r\n  color?: \"dark_cyan\" | \"white\";\r\n  styleType?: \"normal\" | \"register\";\r\n}\r\n\r\nconst Button: React.FC<IProps> = ({ \r\n  children, \r\n  color, \r\n  styleType=\"normal\",\r\n  ...props \r\n}) => {\r\n  return (\r\n    <Container {...props} color={color} styleType={styleType}>\r\n      {children}\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default React.memo(Button);"]},"metadata":{},"sourceType":"module"}