{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\SUNGHO\\\\DEV\\\\Next Class\\\\next-airbnb\\\\components\\\\room\\\\register\\\\RegisterRoomBedTypes.tsx\";\nimport React, { useMemo, useState } from \"react\";\nimport styled from \"styled-components\";\nimport palette from \"../../../styles/palette\";\nimport Button from \"../../common/Button\";\nimport Selector from \"../../common/Selector\";\nconst Container = styled.li.withConfig({\n  displayName: \"RegisterRoomBedTypes__Container\",\n  componentId: \"e0v542-0\"\n})([\"width:100%;padding:28px 0;border-top:1px solid \", \";&:last-child{border-bottom:1px solid \", \";}.register-room-bed-type-top{display:flex;justify-content:space-between;}.register-room-bed-type-bedroom{font-size:19px;color:\", \";}.register-room-bed-type-selector-wrapper{margin-top:28px;width:320px;}\"], palette.gray_dd, palette.gray_dd, palette.gray_48);\n\nconst RegisterRoomBedTypes = ({\n  bedroom\n}) => {\n  const {\n    0: opened,\n    1: setOpened\n  } = useState(false); // * 선택된 침대 옵션들\n\n  const {\n    0: activedBedOptions,\n    1: setActivedBedOptions\n  } = useState([]); // * 침대 개수 총합\n\n  const totalBedsCount = useMemo(() => {\n    let total = 0;\n    bedroom.beds.forEach(bed => {\n      total += bed.count;\n    });\n    return total;\n  }, [bedroom]); // * 침실 유형 열고 닫기\n\n  const toggleOpend = () => setOpened(!opened);\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"register-room-bed-type-top\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"register-room-bed-type-bedroom-texts\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"register-room-bed-type-bedroom\",\n          children: [bedroom.id, \"\\uBC88 \\uCE68\\uC2E4\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"register-room-bed-type-bedroom-counts\",\n          children: [\"\\uCE68\\uB300 \", totalBedsCount, \"\\uAC1C\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: toggleOpend,\n        styleType: \"register\",\n        color: \"white\",\n        children: [opened && \"완료\", !opened && (totalBedsCount === 0 ? \"침대 추가하기\" : \"침대 수정하기\")]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this), opened && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"register-room-bed-type-selector-wrapper\",\n      children: /*#__PURE__*/_jsxDEV(Selector, {\n        type: \"register\",\n        defaultValue: \"\\uB2E4\\uB978 \\uCE68\\uB300 \\uCD94\\uAC00\",\n        value: \"\\uB2E4\\uB978 \\uCE68\\uB300 \\uCD94\\uAC00\",\n        disabledOptions: [\"다른 침대 추가\"]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 9\n  }, this);\n};\n\nexport default RegisterRoomBedTypes;","map":{"version":3,"sources":["D:/SUNGHO/DEV/Next Class/next-airbnb/components/room/register/RegisterRoomBedTypes.tsx"],"names":["React","useMemo","useState","styled","palette","Button","Selector","Container","li","gray_dd","gray_48","RegisterRoomBedTypes","bedroom","opened","setOpened","activedBedOptions","setActivedBedOptions","totalBedsCount","total","beds","forEach","bed","count","toggleOpend","id"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,OAAf,EAAwBC,QAAxB,QAAuC,OAAvC;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,OAAP,MAAoB,yBAApB;AAEA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,QAAP,MAAqB,uBAArB;AAEA,MAAMC,SAAS,GAAGJ,MAAM,CAACK,EAAV;AAAA;AAAA;AAAA,iTAGWJ,OAAO,CAACK,OAHnB,EAKgBL,OAAO,CAACK,OALxB,EAaFL,OAAO,CAACM,OAbN,CAAf;;AAyBA,MAAMC,oBAAsC,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAa;AACxD,QAAM;AAAA,OAACC,MAAD;AAAA,OAASC;AAAT,MAAsBZ,QAAQ,CAAC,KAAD,CAApC,CADwD,CAExD;;AACA,QAAM;AAAA,OAACa,iBAAD;AAAA,OAAoBC;AAApB,MAA4Cd,QAAQ,CAAY,EAAZ,CAA1D,CAHwD,CAOxD;;AACA,QAAMe,cAAc,GAAGhB,OAAO,CAAC,MAAI;AAC/B,QAAIiB,KAAK,GAAC,CAAV;AACAN,IAAAA,OAAO,CAACO,IAAR,CAAaC,OAAb,CAAsBC,GAAD,IAAO;AACxBH,MAAAA,KAAK,IAAIG,GAAG,CAACC,KAAb;AACH,KAFD;AAGA,WAAOJ,KAAP;AACH,GAN6B,EAM3B,CAACN,OAAD,CAN2B,CAA9B,CARwD,CAgBxD;;AACA,QAAMW,WAAW,GAAG,MAAMT,SAAS,CAAC,CAACD,MAAF,CAAnC;;AAEA,sBACI,QAAC,SAAD;AAAA,4BAGI;AAAK,MAAA,SAAS,EAAC,4BAAf;AAAA,8BACI;AAAK,QAAA,SAAS,EAAC,sCAAf;AAAA,gCACI;AAAG,UAAA,SAAS,EAAC,gCAAb;AAAA,qBAA+CD,OAAO,CAACY,EAAvD;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAG,UAAA,SAAS,EAAC,uCAAb;AAAA,sCACQP,cADR;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAOI,QAAC,MAAD;AACI,QAAA,OAAO,EAAEM,WADb;AAEI,QAAA,SAAS,EAAC,UAFd;AAGI,QAAA,KAAK,EAAC,OAHV;AAAA,mBAKKV,MAAM,IAAI,IALf,EAMK,CAACA,MAAD,KACII,cAAc,KAAK,CAAnB,GAAuB,SAAvB,GAAiC,SADrC,CANL;AAAA;AAAA;AAAA;AAAA;AAAA,cAPJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAHJ,EAqBKJ,MAAM,iBACH;AAAK,MAAA,SAAS,EAAC,yCAAf;AAAA,6BACI,QAAC,QAAD;AACI,QAAA,IAAI,EAAC,UADT;AAEI,QAAA,YAAY,EAAC,wCAFjB;AAGI,QAAA,KAAK,EAAC,wCAHV;AAII,QAAA,eAAe,EAAE,CAAC,UAAD;AAJrB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAtBR;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAkCH,CArDD;;AAuDA,eAAeF,oBAAf","sourcesContent":["import React, {useMemo, useState} from \"react\";\r\nimport styled from \"styled-components\";\r\nimport palette from \"../../../styles/palette\";\r\nimport {BedType} from \"../../../types/room\";\r\nimport Button from \"../../common/Button\";\r\nimport Selector from \"../../common/Selector\";\r\n\r\nconst Container = styled.li`\r\n  width: 100%;\r\n  padding: 28px 0;\r\n  border-top: 1px solid ${palette.gray_dd};\r\n  &:last-child {\r\n    border-bottom: 1px solid ${palette.gray_dd};\r\n  }\r\n  .register-room-bed-type-top {\r\n    display: flex;\r\n    justify-content: space-between;\r\n  }\r\n  .register-room-bed-type-bedroom {\r\n    font-size: 19px;\r\n    color: ${palette.gray_48};\r\n  }\r\n  .register-room-bed-type-selector-wrapper {\r\n    margin-top: 28px;\r\n    width: 320px;\r\n  }\r\n`;\r\n\r\ninterface IProps{\r\n    bedroom:{id:number; beds:{type:BedType; count:number}[]};\r\n}\r\n\r\nconst RegisterRoomBedTypes: React.FC<IProps> = ({bedroom})=>{\r\n    const [opened, setOpened] = useState(false);\r\n    // * 선택된 침대 옵션들\r\n    const [activedBedOptions, setActivedBedOptions] = useState<BedType[]>([]);\r\n\r\n\r\n\r\n    // * 침대 개수 총합\r\n    const totalBedsCount = useMemo(()=>{\r\n        let total=0;\r\n        bedroom.beds.forEach((bed)=>{\r\n            total += bed.count;\r\n        });\r\n        return total;\r\n    }, [bedroom]);\r\n\r\n    // * 침실 유형 열고 닫기\r\n    const toggleOpend = () => setOpened(!opened);\r\n\r\n    return (\r\n        <Container>\r\n            \r\n        \r\n            <div className=\"register-room-bed-type-top\">\r\n                <div className=\"register-room-bed-type-bedroom-texts\">\r\n                    <p className=\"register-room-bed-type-bedroom\">{bedroom.id}번 침실</p>\r\n                    <p className=\"register-room-bed-type-bedroom-counts\">\r\n                        침대 {totalBedsCount}개\r\n                    </p>\r\n                </div>\r\n                <Button \r\n                    onClick={toggleOpend}\r\n                    styleType=\"register\"\r\n                    color=\"white\"\r\n                >\r\n                    {opened && \"완료\"}\r\n                    {!opened &&\r\n                        (totalBedsCount === 0 ? \"침대 추가하기\":\"침대 수정하기\")\r\n                    }\r\n                </Button>\r\n            </div>\r\n            {opened && (\r\n                <div className=\"register-room-bed-type-selector-wrapper\">\r\n                    <Selector\r\n                        type=\"register\"\r\n                        defaultValue=\"다른 침대 추가\"\r\n                        value=\"다른 침대 추가\"\r\n                        disabledOptions={[\"다른 침대 추가\"]}\r\n                    />\r\n                </div>\r\n            )}\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default RegisterRoomBedTypes;"]},"metadata":{},"sourceType":"module"}