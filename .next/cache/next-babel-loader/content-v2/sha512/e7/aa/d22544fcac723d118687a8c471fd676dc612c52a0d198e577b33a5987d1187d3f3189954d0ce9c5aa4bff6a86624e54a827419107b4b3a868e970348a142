{"ast":null,"code":"import formidable from \"formidable\";\nimport aws from \"aws-sdk\";\nimport { createReadStream } from \"fs\";\nimport { v4 as uuidv4 } from \"uuid\";\nexport const config = {\n  api: {\n    bodyParser: false\n  }\n};\nexport default (async (req, res) => {\n  if (req.method === \"POST\") {\n    try {\n      const form = new formidable.IncomingForm();\n      const s3 = new aws.S3({\n        accessKeyId: process.env.ACCESSKEY_ID,\n        secretAccessKey: process.env.SECRET_ACCESSKEY_ID\n      });\n      const url = await new Promise((resolve, reject) => {\n        form.parse(req, async (err, fields, files) => {\n          const stream = createReadStream(files.file.path); //* 파일이름\n\n          const originalFileName = files.file.name.split(\".\").shift(); //* 확장자\n\n          const fileExtension = files.file.name.split(\".\").pop();\n          await s3.upload({\n            Bucket: process.env.S3_BUCKET_NAME,\n            Key: `${originalFileName}__${uuidv4()}.${fileExtension}`,\n            ACL: \"public-read\",\n            Body: stream\n          }).promise().then(res => resolve(res.Location)).catch(e => reject(e));\n        });\n      });\n      res.statusCode = 201;\n      return res.send(url);\n    } catch (e) {\n      console.log(e);\n      res.end();\n    }\n  }\n\n  res.statusCode = 405;\n  return res.end();\n});","map":{"version":3,"sources":["D:/SUNGHO/DEV/Next Class/next-airbnb/pages/api/files/upload.ts"],"names":["formidable","aws","createReadStream","v4","uuidv4","config","api","bodyParser","req","res","method","form","IncomingForm","s3","S3","accessKeyId","process","env","ACCESSKEY_ID","secretAccessKey","SECRET_ACCESSKEY_ID","url","Promise","resolve","reject","parse","err","fields","files","stream","file","path","originalFileName","name","split","shift","fileExtension","pop","upload","Bucket","S3_BUCKET_NAME","Key","ACL","Body","promise","then","Location","catch","e","statusCode","send","console","log","end"],"mappings":"AAAA,OAAOA,UAAP,MAAuB,YAAvB;AACA,OAAOC,GAAP,MAAgB,SAAhB;AACA,SAASC,gBAAT,QAAiC,IAAjC;AACA,SAASC,EAAE,IAAIC,MAAf,QAA6B,MAA7B;AAMA,OAAO,MAAMC,MAAM,GAAC;AAChBC,EAAAA,GAAG,EAAC;AACAC,IAAAA,UAAU,EAAC;AADX;AADY,CAAb;AAMP,gBAAe,OAAMC,GAAN,EAA0BC,GAA1B,KAAgD;AAC3D,MAAID,GAAG,CAACE,MAAJ,KAAe,MAAnB,EAA2B;AACvB,QAAI;AACA,YAAMC,IAAI,GAAG,IAAIX,UAAU,CAACY,YAAf,EAAb;AAEA,YAAMC,EAAE,GAAG,IAAIZ,GAAG,CAACa,EAAR,CAAW;AACpBC,QAAAA,WAAW,EAAEC,OAAO,CAACC,GAAR,CAAYC,YADL;AAEpBC,QAAAA,eAAe,EAAEH,OAAO,CAACC,GAAR,CAAYG;AAFT,OAAX,CAAX;AAIA,YAAMC,GAAG,GAAG,MAAM,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACjDb,QAAAA,IAAI,CAACc,KAAL,CAAWjB,GAAX,EAAgB,OAAOkB,GAAP,EAAYC,MAAZ,EAAoBC,KAApB,KAA8B;AAC5C,gBAAMC,MAAM,GAAG3B,gBAAgB,CAAC0B,KAAK,CAACE,IAAN,CAAWC,IAAZ,CAA/B,CAD4C,CAG5C;;AACA,gBAAMC,gBAAgB,GAAGJ,KAAK,CAACE,IAAN,CAAWG,IAAX,CAAgBC,KAAhB,CAAsB,GAAtB,EAA2BC,KAA3B,EAAzB,CAJ4C,CAK5C;;AACA,gBAAMC,aAAa,GAAGR,KAAK,CAACE,IAAN,CAAWG,IAAX,CAAgBC,KAAhB,CAAsB,GAAtB,EAA2BG,GAA3B,EAAtB;AACA,gBAAMxB,EAAE,CACLyB,MADG,CACI;AACNC,YAAAA,MAAM,EAAEvB,OAAO,CAACC,GAAR,CAAYuB,cADd;AAENC,YAAAA,GAAG,EAAG,GAAET,gBAAiB,KAAI5B,MAAM,EAAG,IAAGgC,aAAc,EAFjD;AAGNM,YAAAA,GAAG,EAAE,aAHC;AAINC,YAAAA,IAAI,EAAEd;AAJA,WADJ,EAOHe,OAPG,GAQHC,IARG,CAQGpC,GAAD,IAASc,OAAO,CAACd,GAAG,CAACqC,QAAL,CARlB,EASHC,KATG,CASIC,CAAD,IAAOxB,MAAM,CAACwB,CAAD,CAThB,CAAN;AAUD,SAjBD;AAkBD,OAnBiB,CAAlB;AAoBAvC,MAAAA,GAAG,CAACwC,UAAJ,GAAiB,GAAjB;AACA,aAAOxC,GAAG,CAACyC,IAAJ,CAAS7B,GAAT,CAAP;AACH,KA7BD,CA6BE,OAAO2B,CAAP,EAAU;AACRG,MAAAA,OAAO,CAACC,GAAR,CAAYJ,CAAZ;AACAvC,MAAAA,GAAG,CAAC4C,GAAJ;AACH;AACJ;;AACD5C,EAAAA,GAAG,CAACwC,UAAJ,GAAe,GAAf;AAEA,SAAOxC,GAAG,CAAC4C,GAAJ,EAAP;AACH,CAvCD","sourcesContent":["import formidable from \"formidable\";\r\nimport aws from \"aws-sdk\";\r\nimport { createReadStream } from \"fs\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport { NextApiRequest, NextApiResponse } from \"next\";\r\n\r\n\r\n\r\n\r\nexport const config={\r\n    api:{\r\n        bodyParser:false,\r\n    },\r\n};\r\n\r\nexport default async(req:NextApiRequest, res:NextApiResponse)=>{\r\n    if (req.method === \"POST\") {\r\n        try {\r\n            const form = new formidable.IncomingForm();\r\n\r\n            const s3 = new aws.S3({\r\n              accessKeyId: process.env.ACCESSKEY_ID,\r\n              secretAccessKey: process.env.SECRET_ACCESSKEY_ID,\r\n            });\r\n            const url = await new Promise((resolve, reject) => {\r\n              form.parse(req, async (err, fields, files) => {\r\n                const stream = createReadStream(files.file.path);\r\n      \r\n                //* 파일이름\r\n                const originalFileName = files.file.name.split(\".\").shift();\r\n                //* 확장자\r\n                const fileExtension = files.file.name.split(\".\").pop();\r\n                await s3\r\n                  .upload({\r\n                    Bucket: process.env.S3_BUCKET_NAME!,\r\n                    Key: `${originalFileName}__${uuidv4()}.${fileExtension}`,\r\n                    ACL: \"public-read\",\r\n                    Body: stream,\r\n                  })\r\n                  .promise()\r\n                  .then((res) => resolve(res.Location))\r\n                  .catch((e) => reject(e));\r\n              });\r\n            });\r\n            res.statusCode = 201;\r\n            return res.send(url);\r\n        } catch (e) {\r\n            console.log(e);\r\n            res.end();\r\n        }\r\n    }\r\n    res.statusCode=405;\r\n\r\n    return res.end();\r\n};"]},"metadata":{},"sourceType":"module"}