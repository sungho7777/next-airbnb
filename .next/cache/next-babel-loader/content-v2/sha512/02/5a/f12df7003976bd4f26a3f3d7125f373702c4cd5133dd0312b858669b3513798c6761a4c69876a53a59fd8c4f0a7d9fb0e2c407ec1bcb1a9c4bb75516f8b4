{"ast":null,"code":"import _toConsumableArray from \"D:/SUNGHO/DEV/Next Class/next-airbnb/node_modules/next/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"D:\\\\SUNGHO\\\\DEV\\\\Next Class\\\\next-airbnb\\\\components\\\\room\\\\register\\\\RegisterRoomBedTypes.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useMemo, useState } from \"react\";\nimport styled from \"styled-components\";\nimport { useDispatch } from \"react-redux\";\nimport { bedTypes } from \"../../../lib/staticData\";\nimport { registerRoomActions } from \"../../../store/registerRoom\";\nimport palette from \"../../../styles/palette\";\nimport Button from \"../../common/Button\";\nimport Selector from \"../../common/Selector\";\nvar Container = styled.li.withConfig({\n  displayName: \"RegisterRoomBedTypes__Container\",\n  componentId: \"e0v542-0\"\n})([\"width:100%;padding:28px 0;border-top:1px solid \", \";&:last-child{border-bottom:1px solid \", \";}.register-room-bed-type-top{display:flex;justify-content:space-between;}.register-room-bed-type-bedroom{font-size:19px;color:\", \";}.register-room-bed-type-selector-wrapper{margin-top:28px;width:320px;}.register-room-bed-type-counters{width:320px;margin-top:28px;}.register-room-bed-type-counter{width:290px;margin-bottom:18px;}\"], palette.gray_dd, palette.gray_dd, palette.gray_48);\n_c = Container;\n\nvar RegisterRoomBedTypes = function RegisterRoomBedTypes(_ref) {\n  _s();\n\n  var bedroom = _ref.bedroom;\n\n  var _useState = useState(false),\n      opened = _useState[0],\n      setOpened = _useState[1]; // * 선택된 침대 옵션들\n\n\n  var _useState2 = useState([]),\n      activedBedOptions = _useState2[0],\n      setActivedBedOptions = _useState2[1];\n\n  var dispatch = useDispatch(); // * 침대 개수 총합\n\n  var totalBedsCount = useMemo(function () {\n    var total = 0;\n    bedroom.beds.forEach(function (bed) {\n      total += bed.count;\n    });\n    return total;\n  }, [bedroom]); // * 남은 침대 옵션들\n\n  var lastBedOptions = useMemo(function () {\n    return bedTypes.filter(function (bedType) {\n      return !activedBedOptions.includes(bedType);\n    });\n  }, [activedBedOptions, bedroom]); // * 침실 유형 열고 닫기\n\n  var toggleOpend = function toggleOpend() {\n    return setOpened(!opened);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"register-room-bed-type-top\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"register-room-bed-type-bedroom-texts\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"register-room-bed-type-bedroom\",\n          children: [bedroom.id, \"\\uBC88 \\uCE68\\uC2E4\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 21\n        }, _this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"register-room-bed-type-bedroom-counts\",\n          children: [\"\\uCE68\\uB300 \", totalBedsCount, \"\\uAC1C\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 21\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, _this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: toggleOpend,\n        styleType: \"register\",\n        color: \"white\",\n        children: [opened && \"완료\", !opened && (totalBedsCount === 0 ? \"침대 추가하기\" : \"침대 수정하기\")]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }, _this), opened && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"register-room-bed-type-selector-wrapper\",\n      children: /*#__PURE__*/_jsxDEV(Selector, {\n        type: \"register\",\n        options: lastBedOptions,\n        defaultValue: \"\\uB2E4\\uB978 \\uCE68\\uB300 \\uCD94\\uAC00\",\n        value: \"\\uB2E4\\uB978 \\uCE68\\uB300 \\uCD94\\uAC00\",\n        disabledOptions: [\"다른 침대 추가\"],\n        useValidation: false,\n        onChange: function onChange(e) {\n          return setActivedBedOptions([].concat(_toConsumableArray(activedBedOptions), [e.target.value]));\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 21\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 17\n    }, _this), opened && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"register-room-bed-type-counters\",\n      children: activedBedOptions.map(function (type) {\n        var _bedroom$beds$find;\n\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"register-room-bed-type-counter\",\n          children: /*#__PURE__*/_jsxDEV(Container, {\n            label: type,\n            value: ((_bedroom$beds$find = bedroom.beds.find(function (bed) {\n              return bed.type === type;\n            })) === null || _bedroom$beds$find === void 0 ? void 0 : _bedroom$beds$find.count) || 0,\n            onChange: function onChange(value) {\n              return dispatch(registerRoomActions.setBedTypeCount({\n                bedroomId: bedroom.id,\n                type: type,\n                count: count\n              }));\n            }\n          }, type, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 29\n          }, _this)\n        }, type, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 25\n        }, _this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 17\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 9\n  }, _this);\n};\n\n_s(RegisterRoomBedTypes, \"oRbqfdhdAQu8rQ/jaeteQnJJy1E=\", false, function () {\n  return [useDispatch];\n});\n\n_c2 = RegisterRoomBedTypes;\nexport default RegisterRoomBedTypes;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Container\");\n$RefreshReg$(_c2, \"RegisterRoomBedTypes\");","map":{"version":3,"sources":["D:/SUNGHO/DEV/Next Class/next-airbnb/components/room/register/RegisterRoomBedTypes.tsx"],"names":["React","useMemo","useState","styled","useDispatch","bedTypes","registerRoomActions","palette","Button","Selector","Container","li","gray_dd","gray_48","RegisterRoomBedTypes","bedroom","opened","setOpened","activedBedOptions","setActivedBedOptions","dispatch","totalBedsCount","total","beds","forEach","bed","count","lastBedOptions","filter","bedType","includes","toggleOpend","id","e","target","value","map","type","find","setBedTypeCount","bedroomId"],"mappings":"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","sourcesContent":["import React, {useMemo, useState} from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { bedTypes } from \"../../../lib/staticData\";\r\nimport { registerRoomActions } from \"../../../store/registerRoom\";\r\nimport palette from \"../../../styles/palette\";\r\nimport {BedType} from \"../../../types/room\";\r\nimport Button from \"../../common/Button\";\r\nimport Selector from \"../../common/Selector\";\r\n\r\nconst Container = styled.li`\r\n  width: 100%;\r\n  padding: 28px 0;\r\n  border-top: 1px solid ${palette.gray_dd};\r\n  &:last-child {\r\n    border-bottom: 1px solid ${palette.gray_dd};\r\n  }\r\n  .register-room-bed-type-top {\r\n    display: flex;\r\n    justify-content: space-between;\r\n  }\r\n  .register-room-bed-type-bedroom {\r\n    font-size: 19px;\r\n    color: ${palette.gray_48};\r\n  }\r\n  .register-room-bed-type-selector-wrapper {\r\n    margin-top: 28px;\r\n    width: 320px;\r\n  }\r\n  .register-room-bed-type-counters {\r\n    width: 320px;\r\n    margin-top: 28px;\r\n  }\r\n  .register-room-bed-type-counter {\r\n    width: 290px;\r\n    margin-bottom: 18px;\r\n  }\r\n`;\r\n\r\ninterface IProps{\r\n    bedroom:{id:number; beds:{type:BedType; count:number}[]};\r\n}\r\n\r\nconst RegisterRoomBedTypes: React.FC<IProps> = ({bedroom})=>{\r\n    const [opened, setOpened] = useState(false);\r\n    // * 선택된 침대 옵션들\r\n    const [activedBedOptions, setActivedBedOptions] = useState<BedType[]>([]);\r\n\r\n\r\n    const dispatch = useDispatch();\r\n\r\n\r\n    // * 침대 개수 총합\r\n    const totalBedsCount = useMemo(()=>{\r\n        let total=0;\r\n        bedroom.beds.forEach((bed)=>{\r\n            total += bed.count;\r\n        });\r\n        return total;\r\n    }, [bedroom]);\r\n    // * 남은 침대 옵션들\r\n    const lastBedOptions=useMemo(()=>{\r\n        return bedTypes.filter((bedType)=>!activedBedOptions.includes(bedType));\r\n    }, [activedBedOptions, bedroom]);\r\n\r\n\r\n\r\n\r\n    // * 침실 유형 열고 닫기\r\n    const toggleOpend = () => setOpened(!opened);\r\n\r\n\r\n\r\n\r\n    return (\r\n        <Container>\r\n            \r\n        \r\n            <div className=\"register-room-bed-type-top\">\r\n                <div className=\"register-room-bed-type-bedroom-texts\">\r\n                    <p className=\"register-room-bed-type-bedroom\">{bedroom.id}번 침실</p>\r\n                    <p className=\"register-room-bed-type-bedroom-counts\">\r\n                        침대 {totalBedsCount}개\r\n                    </p>\r\n                </div>\r\n                <Button \r\n                    onClick={toggleOpend}\r\n                    styleType=\"register\"\r\n                    color=\"white\"\r\n                >\r\n                    {opened && \"완료\"}\r\n                    {!opened &&\r\n                        (totalBedsCount === 0 ? \"침대 추가하기\":\"침대 수정하기\")\r\n                    }\r\n                </Button>\r\n            </div>\r\n            {opened && (\r\n                <div className=\"register-room-bed-type-selector-wrapper\">\r\n                    <Selector\r\n                        type=\"register\"\r\n                        options={lastBedOptions}\r\n                        defaultValue=\"다른 침대 추가\"\r\n                        value=\"다른 침대 추가\"\r\n                        disabledOptions={[\"다른 침대 추가\"]}\r\n                        useValidation={false}\r\n                        onChange={(e)=>setActivedBedOptions([\r\n                            ...activedBedOptions,\r\n                            e.target.value as BedType,\r\n                        ])}\r\n                    />\r\n                </div>\r\n            )}\r\n            {opened && (\r\n                <div className=\"register-room-bed-type-counters\">\r\n                    {activedBedOptions.map((type)=>(\r\n                        <div className=\"register-room-bed-type-counter\" key={type}>\r\n                            <Container\r\n                                label={type}\r\n                                value={bedroom.beds.find((bed)=>bed.type===type)?.count || 0}\r\n                                key={type}\r\n                                onChange={(value)=>\r\n                                    dispatch(\r\n                                        registerRoomActions.setBedTypeCount({\r\n                                            bedroomId:bedroom.id,\r\n                                            type,\r\n                                            count,\r\n                                        })\r\n                                    )\r\n                                }\r\n                            />\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n            )}\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default RegisterRoomBedTypes;"]},"metadata":{},"sourceType":"module"}