{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\SUNGHO\\\\DEV\\\\Next Class\\\\next-airbnb\\\\components\\\\room\\\\register\\\\RegisterRoomLocation.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useState } from \"react\";\nimport styled from \"styled-components\";\n\nvar NavigationIcon = function NavigationIcon(props) {\n  return /*#__PURE__*/_jsxDEV(\"svg\", _objectSpread(_objectSpread({}, props), {}, {\n    children: /*#__PURE__*/_jsxDEV(\"path\", {\n      d: \"m0 6 16-6-5.99 16L8 8 0 6z\",\n      fill: \"#008489\"\n    }, void 0, false, void 0, this)\n  }), void 0, false, void 0, this);\n};\n\nNavigationIcon.defaultProps = {\n  width: \"16\",\n  height: \"16\",\n  fill: \"none\",\n  xmlns: \"http://www.w3.org/2000/svg\"\n};\nimport palette from \"../../../styles/palette\";\nimport Button from \"../../common/Button\";\nimport Selector from \"../../common/Selector\";\nimport Input from \"../../common/Input\";\nimport { countryList } from \"../../../lib/staticData\";\nimport { useSelector } from \"../../../store\";\nimport { useDispatch } from \"react-redux\";\nimport { registerRoomActions } from \"../../../store/registerRoom\";\nimport { getLocationInfoAPI } from \"../../../lib/api/map\";\nimport RegisterRoomFooter from \"./RegisterRoomFooter\";\n\n/*\r\n\r\n    4단계\r\n\r\n*/\nconst Container = styled.div.withConfig({\n  displayName: \"RegisterRoomLocation__Container\",\n  componentId: \"sc-1m6cgpy-0\"\n})([\"padding:62px 30px 100px;h2{font-size:19px;font-weight:800;margin-bottom:56px;}h3{font-size:14px;font-weight:bold;color:\", \";margin-bottom:6px;}.register-room-step-info{font-size:14px;max-width:400px;margin-bottom:24px;}.register-room-location-button-wrapper{width:176px;margin-bottom:24px;}.register-room-location-country-selector-wrapper{width:385px;margin-bottom:24px;}.register-room-location-city-district{font-size:14px;max-width:400px;margin-bottom:24px;}.register-room-location-street-address{font-size:14px;max-width:400px;margin-bottom:24px;}.register-room-location-detail-address{font-size:14px;max-width:400px;margin-bottom:24px;}.register-room-location-postcode{font-size:14px;max-width:400px;margin-bottom:24px;}\"], palette.gray_76);\n\nconst RegisterRoomLocation = () => {\n  const country = useSelector(state => state.registerRoom.country);\n  const city = useSelector(state => state.registerRoom.city);\n  const district = useSelector(state => state.registerRoom.district);\n  const streetAddress = useSelector(state => state.registerRoom.streetAddress);\n  const detailAddress = useSelector(state => state.registerRoom.detailAddress);\n  const postcode = useSelector(state => state.registerRoom.postcode);\n  const dispatch = useDispatch(); // * 국가 변경 시\n\n  const onChangeCountry = event => {\n    dispatch(registerRoomActions.setCountry(event.target.value));\n  }; // * 시도 변경 시\n\n\n  const onChangeCity = event => {\n    dispatch(registerRoomActions.setCity(event.target.value));\n  }; // * 시군구 변경 시\n\n\n  const onChangeDistrict = event => {\n    dispatch(registerRoomActions.setDistrict(event.target.value));\n  }; // * 도로명주소 변경 시\n\n\n  const onChangeStreetAddress = event => {\n    dispatch(registerRoomActions.setStreetAddress(event.target.value));\n  }; // * 동호수 변경 시\n\n\n  const onChangeDetailAddress = event => {\n    dispatch(registerRoomActions.setDetailAddress(event.target.value));\n  }; // * 우편번호 변경 시\n\n\n  const onChangePostcode = event => {\n    dispatch(registerRoomActions.setPostcode(event.target.value));\n  }; // * 현재 주소 불러오기 로딩\n\n\n  const {\n    0: loading,\n    1: setLoading\n  } = useState(false); // * 현재 위치 불러오기에 성공했을 때\n\n  const onSuccessGetLocation = async ({\n    coords\n  }) => {\n    try {\n      const {\n        data\n      } = await getLocationInfoAPI({\n        latitude: coords.latitude,\n        longitude: coords.longitude\n      });\n      dispatch(registerRoomActions.setCountry(currentLocation.country));\n      dispatch(registerRoomActions.setCity(currentLocation.city));\n      dispatch(registerRoomActions.setDistrict(currentLocation.district));\n      dispatch(registerRoomActions.setStreetAddress(currentLocation.streetAddress));\n      dispatch(registerRoomActions.setPostcode(currentLocation.postcode));\n      dispatch(registerRoomActions.setLatitude(currentLocation.latitude));\n      dispatch(registerRoomActions.setLongitude(currentLocation.longitude));\n    } catch (e) {\n      console.log(e);\n    }\n\n    setLoading(false);\n  }; // * 현재 위치 사용 클릭 시\n\n\n  const onClickGetCurrentLocation = () => {\n    setLoading(true);\n    navigator.geolocation.getCurrentPosition(onSuccessGetLocation, e => {\n      console.log(e);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\uC219\\uC18C\\uC758 \\uC704\\uCE58\\uB97C \\uC54C\\uB824\\uC8FC\\uC138\\uC694.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"4\\uB2E8\\uACC4\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"register-room-step-info\",\n      children: \"\\uC815\\uD655\\uD55C \\uC219\\uC18C \\uC8FC\\uC18C\\uB294 \\uAC8C\\uC2A4\\uD2B8\\uAC00 \\uC608\\uC57D\\uC744 \\uC644\\uB8CC\\uD55C \\uD6C4\\uC5D0\\uB9CC \\uACF5\\uAC1C\\uB429\\uB2C8\\uB2E4.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"reigster-room-location-button-wrapper\",\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        color: \"dark_cyan\",\n        colorReverse: true,\n        icon: /*#__PURE__*/_jsxDEV(NavigationIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 27\n        }, this),\n        onChange: onClickGetCurrentLocation,\n        children: loading ? \"불러오는 중...\" : \"현재 위치 사용\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"register-room-location-country-selector-wrapper\",\n      children: /*#__PURE__*/_jsxDEV(Selector, {\n        type: \"register\",\n        options: countryList // 국가리스트\n        ,\n        useValidation: false,\n        defaultValue: \"\\uAD6D\\uAC00/\\uC9C0\\uC5ED \\uC120\\uD0DD\",\n        disabledOptions: [\"국가/지역 선택\"],\n        value: country,\n        onChange: onChangeCountry\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"register-room-location-city-district\",\n      children: [/*#__PURE__*/_jsxDEV(Input, {\n        label: \"\\uC2DC/\\uB3C4\",\n        value: city,\n        onChange: onChangeCity\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        label: \"\\uC2DC/\\uAD70/\\uAD6C\",\n        value: district,\n        onChange: onChangeDistrict\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"register-room-location-street-address\",\n      children: /*#__PURE__*/_jsxDEV(Input, {\n        label: \"\\uB3C4\\uB85C\\uBA85\\uC8FC\\uC18C\",\n        value: streetAddress,\n        onChange: onChangeStreetAddress\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"register-room-location-detail-address\",\n      children: /*#__PURE__*/_jsxDEV(Input, {\n        label: \"\\uB3D9\\uD638\\uC218(\\uC120\\uD0DD \\uC0AC\\uD56D)\",\n        value: detailAddress,\n        onChange: onChangeDetailAddress,\n        useValidation: false\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"register-room-location-postcode\",\n      children: /*#__PURE__*/_jsxDEV(Input, {\n        label: \"\\uC6B0\\uD3B8\\uBC88\\uD638\",\n        value: postcode,\n        onChange: onChangePostcode\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(RegisterRoomFooter, {\n      prevHref: \"/room/register/bathroom\",\n      nextHref: \"/room/register/geometry\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 140,\n    columnNumber: 9\n  }, this);\n};\n\nexport default RegisterRoomLocation;","map":{"version":3,"sources":["D:/SUNGHO/DEV/Next Class/next-airbnb/components/room/register/RegisterRoomLocation.tsx"],"names":["React","useState","styled","NavigationIcon","palette","Button","Selector","Input","countryList","useSelector","useDispatch","registerRoomActions","getLocationInfoAPI","RegisterRoomFooter","Container","div","gray_76","RegisterRoomLocation","country","state","registerRoom","city","district","streetAddress","detailAddress","postcode","dispatch","onChangeCountry","event","setCountry","target","value","onChangeCity","setCity","onChangeDistrict","setDistrict","onChangeStreetAddress","setStreetAddress","onChangeDetailAddress","setDetailAddress","onChangePostcode","setPostcode","loading","setLoading","onSuccessGetLocation","coords","data","latitude","longitude","currentLocation","setLatitude","setLongitude","e","console","log","onClickGetCurrentLocation","navigator","geolocation","getCurrentPosition"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport NavigationIcon from \"../../../public/static/svg/register/navigation.svg\";\r\nimport palette from \"../../../styles/palette\";\r\nimport Button from \"../../common/Button\";\r\nimport Selector from \"../../common/Selector\";\r\nimport Input from \"../../common/Input\";\r\n\r\nimport {countryList} from \"../../../lib/staticData\";\r\nimport { useSelector } from \"../../../store\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { registerRoomActions } from \"../../../store/registerRoom\";\r\nimport {getLocationInfoAPI} from \"../../../lib/api/map\";\r\nimport RegisterRoomFooter from \"./RegisterRoomFooter\";\r\nimport RegisterRoomBedTypes from \"./RegisterRoomBedTypes\";\r\n\r\n/*\r\n\r\n    4단계\r\n\r\n*/\r\nconst Container = styled.div`\r\n    padding: 62px 30px 100px;\r\n    h2 {\r\n        font-size: 19px;\r\n        font-weight: 800;\r\n        margin-bottom: 56px;\r\n    }\r\n    h3 {\r\n        font-size: 14px;\r\n        font-weight: bold;\r\n        color: ${palette.gray_76};\r\n        margin-bottom: 6px;\r\n    }\r\n    .register-room-step-info {\r\n        font-size: 14px;\r\n        max-width: 400px;\r\n        margin-bottom: 24px;\r\n    }\r\n    .register-room-location-button-wrapper {\r\n        width: 176px;\r\n        margin-bottom: 24px;\r\n    }\r\n    .register-room-location-country-selector-wrapper {\r\n        width: 385px;\r\n        margin-bottom: 24px;\r\n    }\r\n\r\n    .register-room-location-city-district{\r\n        font-size: 14px;\r\n        max-width: 400px;\r\n        margin-bottom: 24px;\r\n    }\r\n    .register-room-location-street-address{\r\n        font-size: 14px;\r\n        max-width: 400px;\r\n        margin-bottom: 24px;\r\n    }\r\n    .register-room-location-detail-address{\r\n        font-size: 14px;\r\n        max-width: 400px;\r\n        margin-bottom: 24px;\r\n    }\r\n    .register-room-location-postcode{\r\n        font-size: 14px;\r\n        max-width: 400px;\r\n        margin-bottom: 24px;\r\n    }\r\n`;\r\n\r\n\r\nconst RegisterRoomLocation:React.FC=()=>{\r\n    const country = useSelector((state)=>state.registerRoom.country);\r\n    const city = useSelector((state)=>state.registerRoom.city);\r\n    const district = useSelector((state)=>state.registerRoom.district);\r\n    const streetAddress = useSelector((state)=>state.registerRoom.streetAddress);\r\n    const detailAddress = useSelector((state)=>state.registerRoom.detailAddress);\r\n    const postcode = useSelector((state)=>state.registerRoom.postcode);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    // * 국가 변경 시\r\n    const onChangeCountry =(event:React.ChangeEvent<HTMLSelectElement>)=>{\r\n        dispatch(registerRoomActions.setCountry(event.target.value));\r\n    };\r\n    // * 시도 변경 시\r\n    const onChangeCity =(event:React.ChangeEvent<HTMLInputElement>)=>{\r\n        dispatch(registerRoomActions.setCity(event.target.value));\r\n    };\r\n    // * 시군구 변경 시\r\n    const onChangeDistrict =(event:React.ChangeEvent<HTMLInputElement>)=>{\r\n        dispatch(registerRoomActions.setDistrict(event.target.value));\r\n    };\r\n    // * 도로명주소 변경 시\r\n    const onChangeStreetAddress =(event:React.ChangeEvent<HTMLInputElement>)=>{\r\n        dispatch(registerRoomActions.setStreetAddress(event.target.value));\r\n    };\r\n    // * 동호수 변경 시\r\n    const onChangeDetailAddress =(event:React.ChangeEvent<HTMLInputElement>)=>{\r\n        dispatch(registerRoomActions.setDetailAddress(event.target.value));\r\n    };\r\n    // * 우편번호 변경 시\r\n    const onChangePostcode =(event:React.ChangeEvent<HTMLInputElement>)=>{\r\n        dispatch(registerRoomActions.setPostcode(event.target.value));\r\n    };\r\n\r\n    // * 현재 주소 불러오기 로딩\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    // * 현재 위치 불러오기에 성공했을 때\r\n    const onSuccessGetLocation = async({coords}:{coords:Coordinates}) =>{\r\n        try {\r\n            const {data} = await getLocationInfoAPI({\r\n                latitude:coords.latitude,\r\n                longitude:coords.longitude,\r\n            });\r\n            dispatch(registerRoomActions.setCountry(currentLocation.country));\r\n            dispatch(registerRoomActions.setCity(currentLocation.city));\r\n            dispatch(registerRoomActions.setDistrict(currentLocation.district));\r\n            dispatch(registerRoomActions.setStreetAddress(currentLocation.streetAddress));\r\n            dispatch(registerRoomActions.setPostcode(currentLocation.postcode));\r\n\r\n            dispatch(registerRoomActions.setLatitude(currentLocation.latitude));\r\n            dispatch(registerRoomActions.setLongitude(currentLocation.longitude));\r\n        } catch (e) {\r\n            console.log(e);\r\n        }\r\n        setLoading(false);\r\n    };\r\n    \r\n    // * 현재 위치 사용 클릭 시\r\n    const onClickGetCurrentLocation=()=>{\r\n        setLoading(true);\r\n        navigator.geolocation.getCurrentPosition(onSuccessGetLocation, (e)=>{\r\n            console.log(e);\r\n        });\r\n    };\r\n\r\n    return (\r\n        <Container>\r\n            <h2>숙소의 위치를 알려주세요.</h2>\r\n            <h3>4단계</h3>\r\n            <p className=\"register-room-step-info\">\r\n                정확한 숙소 주소는 게스트가 예약을 완료한 후에만 공개됩니다.\r\n            </p>\r\n            <div className=\"reigster-room-location-button-wrapper\">\r\n                <Button \r\n                    color=\"dark_cyan\" \r\n                    colorReverse \r\n                    icon={<NavigationIcon /> }\r\n                    onChange={onClickGetCurrentLocation}\r\n                >\r\n                    {loading ? \"불러오는 중...\" : \"현재 위치 사용\"}\r\n                </Button>\r\n            </div>\r\n            <br />\r\n            <div className=\"register-room-location-country-selector-wrapper\">\r\n                <Selector\r\n                    type=\"register\"\r\n                    options={countryList}   // 국가리스트\r\n                    useValidation={false}\r\n                    defaultValue=\"국가/지역 선택\"\r\n                    disabledOptions={[\"국가/지역 선택\"]}\r\n\r\n                    value={country}\r\n                    onChange={onChangeCountry}\r\n                />\r\n            </div>\r\n            <br />\r\n            <div className=\"register-room-location-city-district\">\r\n                <Input \r\n                    label=\"시/도\"\r\n                    value={city}\r\n                    onChange={onChangeCity}\r\n                />\r\n                <Input \r\n                    label=\"시/군/구\" \r\n                    value={district} \r\n                    onChange={onChangeDistrict}\r\n                />\r\n            </div>\r\n            <div className=\"register-room-location-street-address\">\r\n                <Input \r\n                    label=\"도로명주소\" \r\n                    value={streetAddress}\r\n                    onChange={onChangeStreetAddress}\r\n                />\r\n            </div>\r\n            <div className=\"register-room-location-detail-address\">\r\n                <Input \r\n                    label=\"동호수(선택 사항)\"\r\n                    value={detailAddress}\r\n                    onChange={onChangeDetailAddress}\r\n                    useValidation={false}\r\n                />\r\n            </div>\r\n            <div className=\"register-room-location-postcode\">\r\n                <Input \r\n                    label=\"우편번호\" \r\n                    value={postcode}\r\n                    onChange={onChangePostcode}\r\n                />\r\n            </div>\r\n            <RegisterRoomFooter\r\n                prevHref=\"/room/register/bathroom\"\r\n                nextHref=\"/room/register/geometry\"\r\n            />\r\n        </Container>\r\n    );\r\n};\r\n\r\n\r\nexport default RegisterRoomLocation;"]},"metadata":{},"sourceType":"module"}