{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\SUNGHO\\\\DEV\\\\Next Class\\\\next-airbnb\\\\components\\\\common\\\\Button.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\nimport styled, { css } from \"styled-components\";\nimport palette from \"../../styles/palette\"; // * 버튼 색상 구하기\n\nconst getButtonColor = color => {\n  switch (color) {\n    case \"dark_cyan\":\n      return css([\"background-color:\", \";\"], palette.dark_cyan);\n\n    case \"white\":\n      return css([\"background-color:white;\"]);\n\n    default:\n      return css([\"background-color:\", \";\"], palette.bittersweet);\n  }\n};\n\nconst normalButtonStyle = css([\"width:100%;height:48px;border:0;border-radius:4px;background-color:\", \";color:white;font-size:16px;font-weight:800;outline:none;cursor:pointer;\"], palette.bittersweet);\nconst RegisterButtonStyle = css([\"width:161px;height:45px;border:1px solid \", \";background-color:white;border-radius:4px;color:\", \";font-size:18px;font-weight:700;outline:none;cursor:pointer;\"], palette.gray_c4, palette.gray_48);\nconst Container = styled.button.withConfig({\n  displayName: \"Button__Container\",\n  componentId: \"sc-1h0fxq-0\"\n})([\"width:100%;height:48px;border:0;border-radius:4px;background-color:\", \";color:white;font-size:16px;font-weight:800;outline:none;cursor:pointer;\", \"\"], palette.bittersweet, props => getButtonColor(props.color || \"\"));\n\nconst Button = (_ref) => {\n  let {\n    children,\n    color\n  } = _ref,\n      props = _objectWithoutProperties(_ref, [\"children\", \"color\"]);\n\n  return /*#__PURE__*/_jsxDEV(Container, _objectSpread(_objectSpread({}, props), {}, {\n    color: color,\n    children: children\n  }), void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n};\n\nexport default /*#__PURE__*/React.memo(Button);","map":{"version":3,"sources":["D:/SUNGHO/DEV/Next Class/next-airbnb/components/common/Button.tsx"],"names":["React","styled","css","palette","getButtonColor","color","dark_cyan","bittersweet","normalButtonStyle","RegisterButtonStyle","gray_c4","gray_48","Container","button","props","Button","children","memo"],"mappings":";;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,IAAgBC,GAAhB,QAA0B,mBAA1B;AACA,OAAOC,OAAP,MAAoB,sBAApB,C,CAEA;;AACA,MAAMC,cAAc,GAAEC,KAAD,IAAgB;AACnC,UAAOA,KAAP;AACE,SAAK,WAAL;AACE,aAAOH,GAAP,6BACsBC,OAAO,CAACG,SAD9B;;AAGF,SAAK,OAAL;AACE,aAAOJ,GAAP;;AAGF;AACE,aAAOA,GAAP,6BACsBC,OAAO,CAACI,WAD9B;AAVJ;AAcD,CAfD;;AAgBA,MAAMC,iBAAiB,GAAGN,GAAH,sJAKCC,OAAO,CAACI,WALT,CAAvB;AAaA,MAAME,mBAAmB,GAAGP,GAAH,oKAGDC,OAAO,CAACO,OAHP,EAMZP,OAAO,CAACQ,OANI,CAAzB;AAaA,MAAMC,SAAS,GAAGX,MAAM,CAACY,MAAV;AAAA;AAAA;AAAA,4JAKOV,OAAO,CAACI,WALf,EAWVO,KAAD,IAASV,cAAc,CAACU,KAAK,CAACT,KAAN,IAAe,EAAhB,CAXZ,CAAf;;AAmBA,MAAMU,MAAwB,GAAG,UAAmC;AAAA,MAAlC;AAAEC,IAAAA,QAAF;AAAYX,IAAAA;AAAZ,GAAkC;AAAA,MAAZS,KAAY;;AAClE,sBACE,QAAC,SAAD,kCAAeA,KAAf;AAAsB,IAAA,KAAK,EAAET,KAA7B;AAAA,cACGW;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CAND;;AAQA,4BAAehB,KAAK,CAACiB,IAAN,CAAWF,MAAX,CAAf","sourcesContent":["import React from \"react\"\r\nimport styled, {css} from \"styled-components\"\r\nimport palette from \"../../styles/palette\"\r\n\r\n// * 버튼 색상 구하기\r\nconst getButtonColor=(color:string)=>{\r\n  switch(color){\r\n    case \"dark_cyan\":\r\n      return css`\r\n        background-color: ${palette.dark_cyan};\r\n      `;\r\n    case \"white\":\r\n      return css`\r\n        background-color: white;\r\n      `;\r\n    default:\r\n      return css`\r\n        background-color: ${palette.bittersweet};\r\n      `;\r\n  }\r\n};\r\nconst normalButtonStyle = css`\r\n    width: 100%;\r\n    height: 48px;\r\n    border: 0;\r\n    border-radius: 4px;\r\n    background-color: ${palette.bittersweet};\r\n    color: white;\r\n    font-size: 16px;\r\n    font-weight: 800;\r\n    outline: none;\r\n    cursor: pointer;\r\n`;\r\n\r\nconst RegisterButtonStyle = css`\r\n    width: 161px;\r\n    height: 45px;\r\n    border: 1px solid ${palette.gray_c4};\r\n    background-color: white;\r\n    border-radius: 4px;\r\n    color: ${palette.gray_48};\r\n    font-size: 18px;\r\n    font-weight: 700;\r\n    outline: none;\r\n    cursor: pointer;\r\n`;\r\n\r\nconst Container = styled.button`\r\n  width:100%;\r\n  height: 48px;\r\n  border: 0;\r\n  border-radius: 4px;\r\n  background-color: ${palette.bittersweet};\r\n  color: white;\r\n  font-size: 16px;\r\n  font-weight: 800;\r\n  outline:none;\r\n  cursor: pointer;\r\n  ${(props)=>getButtonColor(props.color || \"\")}\r\n`;\r\n\r\ninterface IProps extends React.ButtonHTMLAttributes<HTMLButtonElement> {\r\n  children: React.ReactNode;\r\n  color?: \"dark_cyan\";\r\n}\r\n\r\nconst Button: React.FC<IProps> = ({ children, color, ...props }) => {\r\n  return (\r\n    <Container {...props} color={color}>\r\n      {children}\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default React.memo(Button);"]},"metadata":{},"sourceType":"module"}