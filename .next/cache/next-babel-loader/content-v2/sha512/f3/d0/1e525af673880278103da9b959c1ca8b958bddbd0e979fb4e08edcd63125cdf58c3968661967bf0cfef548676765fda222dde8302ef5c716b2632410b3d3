{"ast":null,"code":"import { readFileSync, writeFileSync } from \"fs\";\n\n// * 숙소 리스트 데이터 불러오기\nconst getList = () => {\n  const roomsBuffer = readFileSync(\"data/rooms.json\");\n  const roomsString = roomsBuffer.toString();\n\n  if (!roomsString) {\n    return [];\n  }\n\n  const rooms = JSON.parse(roomsString);\n  return rooms;\n}; // * id의 숙소가 있는지 확인하기.\n\n\nconst exist = roomId => {\n  const rooms = getList();\n  return rooms.some(room => room.id === roomId);\n}; // * id의 숙소 불러오기\n\n\nconst find = roomId => {\n  const rooms = getList();\n  return rooms.find(room => room.id === roomId);\n}; // * 숙소 리스트 저장하기\n\n\nconst write = rooms => {\n  writeFileSync(\"data/rooms.json\", JSON.stringify(rooms));\n};\n\nexport default {\n  getList,\n  exist,\n  write,\n  find\n};","map":{"version":3,"sources":["D:/SUNGHO/DEV/Next Class/next-airbnb/lib/data/room.ts"],"names":["readFileSync","writeFileSync","getList","roomsBuffer","roomsString","toString","rooms","JSON","parse","exist","roomId","some","room","id","find","write","stringify"],"mappings":"AAAA,SAASA,YAAT,EAAuBC,aAAvB,QAA4C,IAA5C;;AAGA;AACA,MAAMC,OAAO,GAAG,MAAM;AAClB,QAAMC,WAAW,GAAGH,YAAY,CAAC,iBAAD,CAAhC;AACA,QAAMI,WAAW,GAAGD,WAAW,CAACE,QAAZ,EAApB;;AACA,MAAG,CAACD,WAAJ,EAAgB;AACZ,WAAO,EAAP;AACH;;AACD,QAAME,KAAsB,GAACC,IAAI,CAACC,KAAL,CAAWJ,WAAX,CAA7B;AAEA,SAAOE,KAAP;AACH,CATD,C,CAUA;;;AACA,MAAMG,KAAK,GAAIC,MAAD,IAAmB;AAC7B,QAAMJ,KAAK,GAAGJ,OAAO,EAArB;AAEA,SAAOI,KAAK,CAACK,IAAN,CAAYC,IAAD,IAAUA,IAAI,CAACC,EAAL,KAAYH,MAAjC,CAAP;AACH,CAJD,C,CAKA;;;AACA,MAAMI,IAAI,GAAIJ,MAAD,IAAmB;AAC5B,QAAMJ,KAAK,GAAGJ,OAAO,EAArB;AAEA,SAAOI,KAAK,CAACQ,IAAN,CAAYF,IAAD,IAAUA,IAAI,CAACC,EAAL,KAAYH,MAAjC,CAAP;AACH,CAJD,C,CAKA;;;AACA,MAAMK,KAAK,GAAIT,KAAD,IAA4B;AACtCL,EAAAA,aAAa,CAAC,iBAAD,EAAoBM,IAAI,CAACS,SAAL,CAAeV,KAAf,CAApB,CAAb;AACH,CAFD;;AAIA,eAAe;AAACJ,EAAAA,OAAD;AAAUO,EAAAA,KAAV;AAAiBM,EAAAA,KAAjB;AAAwBD,EAAAA;AAAxB,CAAf","sourcesContent":["import { readFileSync, writeFileSync } from \"fs\";\r\nimport { StoredRoomType } from \"../../types/room\";\r\n\r\n// * 숙소 리스트 데이터 불러오기\r\nconst getList = () => {\r\n    const roomsBuffer = readFileSync(\"data/rooms.json\");\r\n    const roomsString = roomsBuffer.toString();\r\n    if(!roomsString){\r\n        return [];\r\n    }\r\n    const rooms:StoredRoomType[]=JSON.parse(roomsString);\r\n\r\n    return rooms;\r\n};\r\n// * id의 숙소가 있는지 확인하기.\r\nconst exist = (roomId:number) => {\r\n    const rooms = getList();\r\n\r\n    return rooms.some((room) => room.id === roomId);\r\n};\r\n// * id의 숙소 불러오기\r\nconst find = (roomId:number) => {\r\n    const rooms = getList();\r\n\r\n    return rooms.find((room) => room.id === roomId);\r\n};\r\n// * 숙소 리스트 저장하기\r\nconst write = (rooms:StoredRoomType[]) => {\r\n    writeFileSync(\"data/rooms.json\", JSON.stringify(rooms));\r\n};\r\n\r\nexport default {getList, exist, write, find};"]},"metadata":{},"sourceType":"module"}