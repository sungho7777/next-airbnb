{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"D:\\\\SUNGHO\\\\DEV\\\\Next Class\\\\next-airbnb\\\\components\\\\register\\\\RegisterRoomBuilding.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useMemo } from \"react\";\nimport styled from \"styled-components\";\nimport { useDispatch } from \"react-redux\";\nimport palette from \"../../styles/palette\";\nimport { useSelector } from \"../../store\";\nimport { registerRoomActions } from \"../../store/registerRoom\";\nimport Selector from \"../common/Selector\";\nimport RadioGroup from \"../common/RadioGroup\";\nvar Container = styled.div.withConfig({\n  displayName: \"RegisterRoomBuilding__Container\",\n  componentId: \"wjs8af-0\"\n})([\"padding:62px 30px 100px;h2{font-size:19px;font-weight:800;margin-bottom:56px;}h3{font-weight:bold;color:\", \";margin-bottom:6px;}.register-room-building-selector-wrapper{width:320px;margin-bottom:32px;}.register-room-room-type-radio{max-width:485px;margin-bottom:50px;}.register-room-is-setup-for-guest-radio{margin-bottom:50px;}\"], palette.gray_76); // * 선택 불가능한 큼 범위 건물 유형\n\n_c = Container;\nvar disabledlargeBuildingTypeOptions = [\"하나를 선택해주세요.\"]; // * 숙소 유형 radio options\n\nvar roomTypeRadioOptions = [{\n  label: \"집 전체\",\n  value: \"entire\",\n  description: \"게스트가 숙소 전체를 다른 사람과 공유하지 않고 단독으로 이용합니다. 일반적으로 침실, 욕실, 부엌이 포함됩니다.\"\n}, {\n  label: \"개인실\",\n  value: \"private\",\n  description: \"게스트에게 개인 침실이 제공됩니다. 침실 이외의 공간은 공용일 수 있습니다.\"\n}, {\n  label: \"다인실\",\n  value: \"public\",\n  description: \"게스트는 개인공간 없이, 다른 사람과 함께 쓰는 침실이나 공용공간에서 숙박합니다.\"\n}]; // * 게스트만 사용하도록 만들어진 숙소인지 라디오 options\n\nvar isSetUpForGuestOptions = [{\n  label: \"예, 게스트용으로 따로 마련된 숙소입니다.\",\n  value: true\n}, {\n  label: \"아니요, 제 개인 물건이 숙소에 있습니다.\",\n  value: false\n}];\n\nvar RegisterRoomBuilding = function RegisterRoomBuilding() {\n  _s();\n\n  var largeBuildingType = useSelector(function (state) {\n    return state.registerRoom.largeBuildingType;\n  });\n  var buildingType = useSelector(function (state) {\n    return state.registerRoom.buildingType;\n  });\n  var roomType = useSelector(function (state) {\n    return state.registerRoom.roomType;\n  });\n  var isSetUpForGuest = useSelector(function (state) {\n    return state.registerRoom.isSetUpForGuest;\n  });\n  var dispatch = useDispatch(); // * 큰 범위 건물 유형 변경 시\n\n  var onChangeLargeBuildingType = function onChangeLargeBuildingType(event) {\n    dispatch(registerRoomActions.setLargeBuildingType(event.target.value));\n  }; // * 상세 건물 유형 변경시\n\n\n  var onChangeBuildingType = function onChangeBuildingType(event) {\n    dispatch(registerRoomActions.setBuildingType(event.target.value));\n  }; // * 숙소 유형 변경시\n\n\n  var onChangeRoomType = function onChangeRoomType(event) {\n    var selected = event.target.value;\n    dispatch(registerRoomActions.setRoomType(selected));\n  }; // * 게스트용 숙소인지 변경 시\n\n\n  var onChangeIsSetUpForGuest = function onChangeIsSetUpForGuest(value) {\n    dispatch(registerRoomActions.setIsSetUpForGuest(value));\n  }; // * 선택된 건물 유형 options\n\n\n  var detailBuildingOptions = useMemo(function () {\n    switch (largeBuildingType) {\n      case \"아파트\":\n        {\n          var _require = require(\"../../lib/staticData\"),\n              apartmentBuildingTypeList = _require.apartmentBuildingTypeList;\n\n          dispatch(registerRoomActions.setBuildingType(apartmentBuildingTypeList[0]));\n          return apartmentBuildingTypeList;\n        }\n\n      case \"주택\":\n        {\n          var _require2 = require(\"../../lib/staticData\"),\n              houstBuildingTypeList = _require2.houstBuildingTypeList;\n\n          dispatch(registerRoomActions.setBuildingType(houstBuildingTypeList[0]));\n          return houstBuildingTypeList;\n        }\n\n      case \"별채\":\n        {\n          var _require3 = require(\"../../lib/staticData\"),\n              secondaryUnitBuildingTypeList = _require3.secondaryUnitBuildingTypeList;\n\n          dispatch(registerRoomActions.setBuildingType(secondaryUnitBuildingTypeList[0]));\n          return secondaryUnitBuildingTypeList;\n        }\n\n      case \"독특한 숙소\":\n        {\n          var _require4 = require(\"../../lib/staticData\"),\n              uniqueSpaceBuildingTypeList = _require4.uniqueSpaceBuildingTypeList;\n\n          dispatch(registerRoomActions.setBuildingType(uniqueSpaceBuildingTypeList[0]));\n          return uniqueSpaceBuildingTypeList;\n        }\n\n      case \"B&B\":\n        {\n          var _require5 = require(\"../../lib/staticData\"),\n              bnbBuildingTypeList = _require5.bnbBuildingTypeList;\n\n          dispatch(registerRoomActions.setBuildingType(bnbBuildingTypeList[0]));\n          return bnbBuildingTypeList;\n        }\n\n      case \"부티크호텔\":\n        {\n          var _require6 = require(\"../../lib/staticData\"),\n              boutiquesHotelBuildingTypeList = _require6.boutiquesHotelBuildingTypeList;\n\n          dispatch(registerRoomActions.setBuildingType(boutiquesHotelBuildingTypeList[0]));\n          return boutiquesHotelBuildingTypeList;\n        }\n\n      default:\n        return [];\n    }\n  }, [largeBuildingType]);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\uB4F1\\uB85D\\uD560 \\uC219\\uC18C \\uC885\\uB958\\uB294 \\uBB34\\uC5C7\\uC778\\uAC00\\uC694?\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 13\n    }, _this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"1\\uB2E8\\uACC4\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 13\n    }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"register-room-building-selector-wrapper\",\n      children: /*#__PURE__*/_jsxDEV(Selector, {\n        type: \"register\",\n        value: buildingType || undefined,\n        defaultValue: \"\\uD558\\uB098\\uB97C \\uC12D\\uD0DD\\uD574\\uC8FC\\uC138\\uC694.\",\n        disabledOptions: disabledlargeBuildingTypeOptions,\n        label: \"\\uAC74\\uBB3C \\uC720\\uD615\\uC744 \\uC120\\uD0DD\\uD558\\uC138\\uC694.\",\n        options: detailBuildingOptions //disabled={!largeBuildingType}\n        ,\n        onChange: onChangeBuildingType\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 17\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 13\n    }, _this), buildingType && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"register-room-room-type-radio\",\n        children: /*#__PURE__*/_jsxDEV(RadioGroup, {\n          label: \"\\uAC8C\\uC2A4\\uD2B8\\uAC00 \\uBB35\\uAC8C \\uB420 \\uC219\\uC18C \\uC720\\uD615\\uC744 \\uACE8\\uB77C\\uC8FC\\uC138\\uC694.\",\n          value: roomType,\n          options: roomTypeRadioOptions,\n          onChange: onChangeRoomType\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 25\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 21\n      }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"register-room-is-setup-for-guest-radio\",\n        children: /*#__PURE__*/_jsxDEV(RadioGroup, {\n          label: \"\\uAC8C\\uC2A4\\uD2B8\\uB9CC \\uC0AC\\uC6A9\\uD558\\uB3C4\\uB85D \\uB9CC\\uB4E4\\uC5B4\\uC9C4 \\uC219\\uC18C\\uC778\\uAC00\\uC694?\",\n          value: isSetUpForGuest,\n          onChange: onChangeIsSetUpForGuest,\n          options: isSetUpForGuestOptions\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 25\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 21\n      }, _this)]\n    }, void 0, true), /*#__PURE__*/_jsxDEV(RegisterRoomFooter, {\n      isValid: isValid,\n      prevHref: \"/\",\n      nextHref: \"/room/register/bedrooms\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 13\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 169,\n    columnNumber: 9\n  }, _this);\n};\n\n_s(RegisterRoomBuilding, \"zTvHe20c0BiTo4aJTQhYq1ghva4=\", false, function () {\n  return [useSelector, useSelector, useSelector, useSelector, useDispatch];\n});\n\n_c2 = RegisterRoomBuilding;\nexport default RegisterRoomBuilding;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Container\");\n$RefreshReg$(_c2, \"RegisterRoomBuilding\");","map":{"version":3,"sources":["D:/SUNGHO/DEV/Next Class/next-airbnb/components/register/RegisterRoomBuilding.tsx"],"names":["React","useMemo","styled","useDispatch","palette","useSelector","registerRoomActions","Selector","RadioGroup","Container","div","gray_76","disabledlargeBuildingTypeOptions","roomTypeRadioOptions","label","value","description","isSetUpForGuestOptions","RegisterRoomBuilding","largeBuildingType","state","registerRoom","buildingType","roomType","isSetUpForGuest","dispatch","onChangeLargeBuildingType","event","setLargeBuildingType","target","onChangeBuildingType","setBuildingType","onChangeRoomType","selected","setRoomType","onChangeIsSetUpForGuest","setIsSetUpForGuest","detailBuildingOptions","require","apartmentBuildingTypeList","houstBuildingTypeList","secondaryUnitBuildingTypeList","uniqueSpaceBuildingTypeList","bnbBuildingTypeList","boutiquesHotelBuildingTypeList","undefined","isValid"],"mappings":"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","sourcesContent":["import React, { useMemo } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport palette from \"../../styles/palette\"\r\nimport { useSelector } from \"../../store\";\r\nimport { registerRoomActions } from \"../../store/registerRoom\";\r\nimport {largeBuildingTypeList} from \"../../lib/staticData\";\r\nimport Selector from \"../common/Selector\";\r\nimport RadioGroup from \"../common/RadioGroup\";\r\n\r\nconst Container = styled.div`\r\n    padding: 62px 30px 100px;\r\n    h2 {\r\n        font-size: 19px;\r\n        font-weight: 800;\r\n        margin-bottom: 56px;\r\n    }\r\n    h3 {\r\n        font-weight: bold;\r\n        color: ${palette.gray_76};\r\n        margin-bottom: 6px;\r\n    }\r\n    .register-room-building-selector-wrapper {\r\n        width: 320px;\r\n        margin-bottom: 32px;\r\n    }\r\n    .register-room-room-type-radio {\r\n        max-width: 485px;\r\n        margin-bottom: 50px;\r\n    }\r\n    .register-room-is-setup-for-guest-radio {\r\n        margin-bottom: 50px;\r\n    }\r\n`;\r\n\r\n// * 선택 불가능한 큼 범위 건물 유형\r\nconst disabledlargeBuildingTypeOptions = [\"하나를 선택해주세요.\"];\r\n\r\n// * 숙소 유형 radio options\r\nconst roomTypeRadioOptions = [\r\n    {\r\n        label:\"집 전체\",\r\n        value:\"entire\",\r\n        description:\"게스트가 숙소 전체를 다른 사람과 공유하지 않고 단독으로 이용합니다. 일반적으로 침실, 욕실, 부엌이 포함됩니다.\",\r\n    },\r\n    {\r\n        label:\"개인실\",\r\n        value:\"private\",\r\n        description:\"게스트에게 개인 침실이 제공됩니다. 침실 이외의 공간은 공용일 수 있습니다.\",\r\n    },\r\n    {\r\n        label:\"다인실\",\r\n        value:\"public\",\r\n        description:\"게스트는 개인공간 없이, 다른 사람과 함께 쓰는 침실이나 공용공간에서 숙박합니다.\",\r\n    },\r\n];\r\n// * 게스트만 사용하도록 만들어진 숙소인지 라디오 options\r\nconst isSetUpForGuestOptions = [\r\n    {\r\n        label:\"예, 게스트용으로 따로 마련된 숙소입니다.\",\r\n        value:true,\r\n    },\r\n    {\r\n        label:\"아니요, 제 개인 물건이 숙소에 있습니다.\",\r\n        value:false,\r\n    },\r\n];\r\n\r\nconst RegisterRoomBuilding:React.FC=()=>{\r\n    const largeBuildingType = useSelector(\r\n        (state) => state.registerRoom.largeBuildingType\r\n    );\r\n    const buildingType = useSelector((state) => state.registerRoom.buildingType);\r\n    const roomType = useSelector((state) => state.registerRoom.roomType);\r\n    const isSetUpForGuest = useSelector((state) => state.registerRoom.isSetUpForGuest);\r\n    \r\n    const dispatch = useDispatch();\r\n\r\n    // * 큰 범위 건물 유형 변경 시\r\n    const onChangeLargeBuildingType = (event: React.ChangeEvent<HTMLSelectElement>) => {\r\n        dispatch(registerRoomActions.setLargeBuildingType(event.target.value));\r\n    };\r\n    \r\n    // * 상세 건물 유형 변경시\r\n    const onChangeBuildingType=(event:React.ChangeEvent<HTMLSelectElement>)=>{\r\n        dispatch(registerRoomActions.setBuildingType(event.target.value));\r\n    };\r\n\r\n    // * 숙소 유형 변경시\r\n    const onChangeRoomType = (event:React.ChangeEvent<HTMLInputElement>)=>{\r\n        const selected=event.target.value;\r\n        dispatch(\r\n            registerRoomActions.setRoomType(\r\n                selected as \"entire\" | \"private\" | \"public\"\r\n            )\r\n        );\r\n    };\r\n\r\n    // * 게스트용 숙소인지 변경 시\r\n    const onChangeIsSetUpForGuest=(value:any)=>{\r\n        dispatch(registerRoomActions.setIsSetUpForGuest(value));\r\n    };\r\n\r\n\r\n    // * 선택된 건물 유형 options\r\n    const detailBuildingOptions=useMemo(()=>{\r\n        switch (largeBuildingType) {\r\n            case \"아파트\": {\r\n                const { \r\n                    apartmentBuildingTypeList,\r\n                } = require(\"../../lib/staticData\");\r\n                dispatch(\r\n                    registerRoomActions.setBuildingType(apartmentBuildingTypeList[0])\r\n                );\r\n                return apartmentBuildingTypeList;\r\n            }\r\n            case \"주택\": {\r\n                const {\r\n                    houstBuildingTypeList\r\n                } = require(\"../../lib/staticData\");\r\n                dispatch(\r\n                    registerRoomActions.setBuildingType(houstBuildingTypeList[0])\r\n                );\r\n                return houstBuildingTypeList;\r\n            }\r\n            case \"별채\": {\r\n                const {\r\n                    secondaryUnitBuildingTypeList,\r\n                } = require(\"../../lib/staticData\");\r\n                dispatch(\r\n                    registerRoomActions.setBuildingType(secondaryUnitBuildingTypeList[0])\r\n                );\r\n                return secondaryUnitBuildingTypeList;\r\n            }\r\n            case \"독특한 숙소\": {\r\n                const {\r\n                    uniqueSpaceBuildingTypeList\r\n                } = require(\"../../lib/staticData\");\r\n                dispatch(\r\n                    registerRoomActions.setBuildingType(uniqueSpaceBuildingTypeList[0])\r\n                );\r\n                return uniqueSpaceBuildingTypeList;\r\n            }\r\n            case \"B&B\": {\r\n                const {\r\n                    bnbBuildingTypeList\r\n                } = require(\"../../lib/staticData\");\r\n                dispatch(\r\n                    registerRoomActions.setBuildingType(bnbBuildingTypeList[0])\r\n                );\r\n                return bnbBuildingTypeList;\r\n            }\r\n            case \"부티크호텔\": {\r\n                const {\r\n                    boutiquesHotelBuildingTypeList,\r\n                } = require(\"../../lib/staticData\");\r\n                dispatch(\r\n                    registerRoomActions.setBuildingType(boutiquesHotelBuildingTypeList[0])\r\n                );\r\n                return boutiquesHotelBuildingTypeList;\r\n            }\r\n            default:\r\n                return [];\r\n        }\r\n    }, [largeBuildingType]);\r\n\r\n\r\n    return (\r\n        <Container>\r\n            <h2>등록할 숙소 종류는 무엇인가요?</h2>\r\n            <h3>1단계</h3>\r\n            <div className=\"register-room-building-selector-wrapper\">\r\n                <Selector\r\n                    type=\"register\"\r\n                    value={buildingType || undefined}\r\n                    defaultValue=\"하나를 섭택해주세요.\"\r\n                    disabledOptions={disabledlargeBuildingTypeOptions}\r\n                    label=\"건물 유형을 선택하세요.\"\r\n                    options={detailBuildingOptions}\r\n\r\n                    //disabled={!largeBuildingType}\r\n                    onChange={onChangeBuildingType}\r\n                />\r\n            </div>\r\n            {buildingType && (\r\n                <>\r\n                    <div className=\"register-room-room-type-radio\">\r\n                        <RadioGroup\r\n                            label=\"게스트가 묵게 될 숙소 유형을 골라주세요.\"\r\n                            value={roomType}\r\n                            options={roomTypeRadioOptions}\r\n                            onChange={onChangeRoomType}\r\n                        />\r\n                    </div>\r\n                    <div className=\"register-room-is-setup-for-guest-radio\">\r\n                        <RadioGroup\r\n                            label=\"게스트만 사용하도록 만들어진 숙소인가요?\"\r\n                            value={isSetUpForGuest}\r\n                            onChange={onChangeIsSetUpForGuest}\r\n                            options={isSetUpForGuestOptions}\r\n                        />\r\n                    </div>\r\n                </>\r\n            )}\r\n            <RegisterRoomFooter\r\n                isValid={isValid}\r\n                prevHref=\"/\"\r\n                nextHref=\"/room/register/bedrooms\"\r\n            />\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default RegisterRoomBuilding;"]},"metadata":{},"sourceType":"module"}