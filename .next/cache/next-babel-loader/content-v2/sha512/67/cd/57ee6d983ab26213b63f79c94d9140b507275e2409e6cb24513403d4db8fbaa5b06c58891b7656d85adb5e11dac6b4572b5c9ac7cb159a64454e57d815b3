{"ast":null,"code":"//* \"token=value\" 를 {token:\"value\"}로 바꾸는 함수\nexport const cookieStringToObject = cookieString => {\n  const cookies = {};\n\n  if (cookieString) {\n    //* \"token=value\"\n    const itemString = cookieString === null || cookieString === void 0 ? void 0 : cookieString.split(/\\s*;\\s*/);\n    itemString.forEach(pairs => {\n      //* [\"token\",\"value\"]\n      const pair = pairs.split(/\\s*=\\s*/);\n      cookies[pair[0]] = pair.splice(1).join(\"=\");\n    });\n  }\n\n  return cookies;\n}; //*string에서 number만 return 하는 함수\n\nexport const getNumber = string => {\n  var _string$match;\n\n  const numbers = (_string$match = string.match(/\\d/g)) === null || _string$match === void 0 ? void 0 : _string$match.join(\"\");\n\n  if (numbers) {\n    return Number(numbers);\n  }\n\n  return null;\n}; //* 금액을 입력하면 금액에 ,를 넣어주는 함수\n\nexport const makeMoneyString = input => {\n  const amountString = input.replace(/[^0-9]/g, \"\");\n\n  if (amountString) {\n    return parseInt(amountString, 10).toLocaleString();\n  }\n\n  return \"\";\n};","map":{"version":3,"sources":["D:/SUNGHO/DEV/Next Class/next-airbnb/lib/utils.ts"],"names":["cookieStringToObject","cookieString","cookies","itemString","split","forEach","pairs","pair","splice","join","getNumber","string","numbers","match","Number","makeMoneyString","input","amountString","replace","parseInt","toLocaleString"],"mappings":"AAAA;AACA,OAAO,MAAMA,oBAAoB,GAAIC,YAAD,IAAsC;AACtE,QAAMC,OAAkC,GAAG,EAA3C;;AACA,MAAID,YAAJ,EAAkB;AAChB;AACA,UAAME,UAAU,GAAGF,YAAH,aAAGA,YAAH,uBAAGA,YAAY,CAAEG,KAAd,CAAoB,SAApB,CAAnB;AACAD,IAAAA,UAAU,CAACE,OAAX,CAAoBC,KAAD,IAAW;AAC5B;AACA,YAAMC,IAAI,GAAGD,KAAK,CAACF,KAAN,CAAY,SAAZ,CAAb;AACAF,MAAAA,OAAO,CAACK,IAAI,CAAC,CAAD,CAAL,CAAP,GAAmBA,IAAI,CAACC,MAAL,CAAY,CAAZ,EAAeC,IAAf,CAAoB,GAApB,CAAnB;AACD,KAJD;AAKD;;AACD,SAAOP,OAAP;AACH,CAZM,C,CAcP;;AACA,OAAO,MAAMQ,SAAS,GAAIC,MAAD,IAAoB;AAAA;;AAC3C,QAAMC,OAAO,oBAAGD,MAAM,CAACE,KAAP,CAAa,KAAb,CAAH,kDAAG,cAAqBJ,IAArB,CAA0B,EAA1B,CAAhB;;AACA,MAAIG,OAAJ,EAAa;AACX,WAAOE,MAAM,CAACF,OAAD,CAAb;AACD;;AACD,SAAO,IAAP;AACD,CANM,C,CASP;;AACA,OAAO,MAAMG,eAAe,GAAIC,KAAD,IAAmB;AAChD,QAAMC,YAAY,GAAGD,KAAK,CAACE,OAAN,CAAc,SAAd,EAAyB,EAAzB,CAArB;;AACA,MAAID,YAAJ,EAAkB;AAChB,WAAOE,QAAQ,CAACF,YAAD,EAAe,EAAf,CAAR,CAA2BG,cAA3B,EAAP;AACD;;AACD,SAAO,EAAP;AACD,CANM","sourcesContent":["//* \"token=value\" 를 {token:\"value\"}로 바꾸는 함수\r\nexport const cookieStringToObject = (cookieString: string | undefined) => {\r\n    const cookies: { [key: string]: string } = {};\r\n    if (cookieString) {\r\n      //* \"token=value\"\r\n      const itemString = cookieString?.split(/\\s*;\\s*/);\r\n      itemString.forEach((pairs) => {\r\n        //* [\"token\",\"value\"]\r\n        const pair = pairs.split(/\\s*=\\s*/);\r\n        cookies[pair[0]] = pair.splice(1).join(\"=\");\r\n      });\r\n    }\r\n    return cookies;\r\n};\r\n\r\n//*string에서 number만 return 하는 함수\r\nexport const getNumber = (string: string) => {\r\n  const numbers = string.match(/\\d/g)?.join(\"\");\r\n  if (numbers) {\r\n    return Number(numbers);\r\n  }\r\n  return null;\r\n};\r\n\r\n\r\n//* 금액을 입력하면 금액에 ,를 넣어주는 함수\r\nexport const makeMoneyString = (input: string) => {\r\n  const amountString = input.replace(/[^0-9]/g, \"\");\r\n  if (amountString) {\r\n    return parseInt(amountString, 10).toLocaleString();\r\n  }\r\n  return \"\";\r\n};"]},"metadata":{},"sourceType":"module"}